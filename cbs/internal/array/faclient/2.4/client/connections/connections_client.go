// Code generated by go-swagger; DO NOT EDIT.

package connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new connections API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for connections API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24Connections(params *DeleteAPI24ConnectionsParams) (*DeleteApi24ConnectionsOK, error)

	GetAPI24Connections(params *GetAPI24ConnectionsParams) (*GetApi24ConnectionsOK, error)

	PostAPI24Connections(params *PostAPI24ConnectionsParams) (*PostApi24ConnectionsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24Connections deletes a connection between a volume and its host or host group

  Deletes the connection between a volume and its associated host or host group. The `volume_names` and `host_names` or `host_group_names` query parameters are required.
*/
func (a *Client) DeleteAPI24Connections(params *DeleteAPI24ConnectionsParams) (*DeleteApi24ConnectionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24ConnectionsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24Connections",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/connections",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24ConnectionsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24ConnectionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24Connections: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24Connections lists volume connections

  Displays a list of connections between a volume and its hosts and host groups, and the logical unit numbers (LUNs) used by the associated hosts to address these volumes.
*/
func (a *Client) GetAPI24Connections(params *GetAPI24ConnectionsParams) (*GetApi24ConnectionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24ConnectionsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24Connections",
		Method:             "GET",
		PathPattern:        "/api/2.4/connections",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24ConnectionsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24ConnectionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24Connections: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24Connections creates a connection between a volume and host or host group

  Creates a connection between a volume and a host or host group. The `volume_names` and `host_names` or `host_group_names` query parameters are required.
*/
func (a *Client) PostAPI24Connections(params *PostAPI24ConnectionsParams) (*PostApi24ConnectionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24ConnectionsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24Connections",
		Method:             "POST",
		PathPattern:        "/api/2.4/connections",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24ConnectionsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24ConnectionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24Connections: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
