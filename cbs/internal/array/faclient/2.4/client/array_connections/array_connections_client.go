// Code generated by go-swagger; DO NOT EDIT.

package array_connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new array connections API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for array connections API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24ArrayConnections(params *DeleteAPI24ArrayConnectionsParams) (*DeleteApi24ArrayConnectionsOK, error)

	GetAPI24ArrayConnections(params *GetAPI24ArrayConnectionsParams) (*GetApi24ArrayConnectionsOK, error)

	GetAPI24ArrayConnectionsConnectionKey(params *GetAPI24ArrayConnectionsConnectionKeyParams) (*GetApi24ArrayConnectionsConnectionKeyOK, error)

	GetAPI24ArrayConnectionsPath(params *GetAPI24ArrayConnectionsPathParams) (*GetApi24ArrayConnectionsPathOK, error)

	PatchAPI24ArrayConnections(params *PatchAPI24ArrayConnectionsParams) (*PatchApi24ArrayConnectionsOK, error)

	PostAPI24ArrayConnections(params *PostAPI24ArrayConnectionsParams) (*PostApi24ArrayConnectionsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24ArrayConnections deletes an array connection

  Deletes the connection to the current array from the specified array.
*/
func (a *Client) DeleteAPI24ArrayConnections(params *DeleteAPI24ArrayConnectionsParams) (*DeleteApi24ArrayConnectionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24ArrayConnectionsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24ArrayConnections",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/array-connections",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24ArrayConnectionsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24ArrayConnectionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24ArrayConnections: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24ArrayConnections lists connected arrays

  Display a list of connected arrays.
*/
func (a *Client) GetAPI24ArrayConnections(params *GetAPI24ArrayConnectionsParams) (*GetApi24ArrayConnectionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24ArrayConnectionsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24ArrayConnections",
		Method:             "GET",
		PathPattern:        "/api/2.4/array-connections",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24ArrayConnectionsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24ArrayConnectionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24ArrayConnections: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24ArrayConnectionsConnectionKey lists connection key

  Displays the connection key for the array.
*/
func (a *Client) GetAPI24ArrayConnectionsConnectionKey(params *GetAPI24ArrayConnectionsConnectionKeyParams) (*GetApi24ArrayConnectionsConnectionKeyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24ArrayConnectionsConnectionKeyParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24ArrayConnectionsConnectionKey",
		Method:             "GET",
		PathPattern:        "/api/2.4/array-connections/connection-key",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24ArrayConnectionsConnectionKeyReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24ArrayConnectionsConnectionKeyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24ArrayConnectionsConnectionKey: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24ArrayConnectionsPath lists connection path

  Displays the connection path from the array where the connection was made.
*/
func (a *Client) GetAPI24ArrayConnectionsPath(params *GetAPI24ArrayConnectionsPathParams) (*GetApi24ArrayConnectionsPathOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24ArrayConnectionsPathParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24ArrayConnectionsPath",
		Method:             "GET",
		PathPattern:        "/api/2.4/array-connections/path",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24ArrayConnectionsPathReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24ArrayConnectionsPathOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24ArrayConnectionsPath: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24ArrayConnections modifies an array connection

  Modifies the bandwidth throttling attributes for a connected array.
*/
func (a *Client) PatchAPI24ArrayConnections(params *PatchAPI24ArrayConnectionsParams) (*PatchApi24ArrayConnectionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24ArrayConnectionsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24ArrayConnections",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/array-connections",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24ArrayConnectionsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24ArrayConnectionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24ArrayConnections: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24ArrayConnections creates an array connection

  Creates a connection between the current array and the specified array.
*/
func (a *Client) PostAPI24ArrayConnections(params *PostAPI24ArrayConnectionsParams) (*PostApi24ArrayConnectionsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24ArrayConnectionsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24ArrayConnections",
		Method:             "POST",
		PathPattern:        "/api/2.4/array-connections",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24ArrayConnectionsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24ArrayConnectionsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24ArrayConnections: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
