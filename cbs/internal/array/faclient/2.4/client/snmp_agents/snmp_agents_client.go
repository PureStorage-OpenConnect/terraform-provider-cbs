// Code generated by go-swagger; DO NOT EDIT.

package snmp_agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new snmp agents API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for snmp agents API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetAPI24SNMPAgents(params *GetAPI24SNMPAgentsParams) (*GetApi24SNMPAgentsOK, error)

	GetAPI24SNMPAgentsMib(params *GetAPI24SNMPAgentsMibParams) (*GetApi24SNMPAgentsMibOK, error)

	PatchAPI24SNMPAgents(params *PatchAPI24SNMPAgentsParams) (*PatchApi24SNMPAgentsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetAPI24SNMPAgents lists SNMP agent

  Displays the SNMP agent name and protocol attributes.
*/
func (a *Client) GetAPI24SNMPAgents(params *GetAPI24SNMPAgentsParams) (*GetApi24SNMPAgentsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24SNMPAgentsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24SNMPAgents",
		Method:             "GET",
		PathPattern:        "/api/2.4/snmp-agents",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24SNMPAgentsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24SNMPAgentsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24SNMPAgents: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24SNMPAgentsMib lists SNMP agent m i b text

  Displays the SNMP MIB text.
*/
func (a *Client) GetAPI24SNMPAgentsMib(params *GetAPI24SNMPAgentsMibParams) (*GetApi24SNMPAgentsMibOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24SNMPAgentsMibParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24SNMPAgentsMib",
		Method:             "GET",
		PathPattern:        "/api/2.4/snmp-agents/mib",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24SNMPAgentsMibReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24SNMPAgentsMibOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24SNMPAgentsMib: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24SNMPAgents modifies SNMP agent

  Modifies the name or the protocol attributes of the SNMP agent.
*/
func (a *Client) PatchAPI24SNMPAgents(params *PatchAPI24SNMPAgentsParams) (*PatchApi24SNMPAgentsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24SNMPAgentsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24SNMPAgents",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/snmp-agents",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24SNMPAgentsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24SNMPAgentsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24SNMPAgents: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
