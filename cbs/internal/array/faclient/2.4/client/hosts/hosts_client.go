// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new hosts API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for hosts API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24Hosts(params *DeleteAPI24HostsParams) (*DeleteApi24HostsOK, error)

	DeleteAPI24HostsHostGroups(params *DeleteAPI24HostsHostGroupsParams) (*DeleteApi24HostsHostGroupsOK, error)

	DeleteAPI24HostsProtectionGroups(params *DeleteAPI24HostsProtectionGroupsParams) (*DeleteApi24HostsProtectionGroupsOK, error)

	GetAPI24Hosts(params *GetAPI24HostsParams) (*GetApi24HostsOK, error)

	GetAPI24HostsHostGroups(params *GetAPI24HostsHostGroupsParams) (*GetApi24HostsHostGroupsOK, error)

	GetAPI24HostsPerformance(params *GetAPI24HostsPerformanceParams) (*GetApi24HostsPerformanceOK, error)

	GetAPI24HostsPerformanceBalance(params *GetAPI24HostsPerformanceBalanceParams) (*GetApi24HostsPerformanceBalanceOK, error)

	GetAPI24HostsPerformanceByArray(params *GetAPI24HostsPerformanceByArrayParams) (*GetApi24HostsPerformanceByArrayOK, error)

	GetAPI24HostsProtectionGroups(params *GetAPI24HostsProtectionGroupsParams) (*GetApi24HostsProtectionGroupsOK, error)

	GetAPI24HostsSpace(params *GetAPI24HostsSpaceParams) (*GetApi24HostsSpaceOK, error)

	PatchAPI24Hosts(params *PatchAPI24HostsParams) (*PatchApi24HostsOK, error)

	PostAPI24Hosts(params *PostAPI24HostsParams) (*PostApi24HostsOK, error)

	PostAPI24HostsHostGroups(params *PostAPI24HostsHostGroupsParams) (*PostApi24HostsHostGroupsOK, error)

	PostAPI24HostsProtectionGroups(params *PostAPI24HostsProtectionGroupsParams) (*PostApi24HostsProtectionGroupsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24Hosts deletes a host

  Deletes an existing host. All volumes that are connected to the host, either through private or shared connections, must be disconnected from the host before the host can be deleted. The `names` query parameter is required.
*/
func (a *Client) DeleteAPI24Hosts(params *DeleteAPI24HostsParams) (*DeleteApi24HostsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24HostsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24Hosts",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/hosts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24HostsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24HostsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24Hosts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24HostsHostGroups removes a host from a host group

  Removes a host from a host group. Removing a host from a host group automatically disconnects the host from all volumes associated with the group. Hosts can be removed from host groups at any time. The `group_names` and `member_names` parameters are required and must be set together, and only one host group can be specified at a time.
*/
func (a *Client) DeleteAPI24HostsHostGroups(params *DeleteAPI24HostsHostGroupsParams) (*DeleteApi24HostsHostGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24HostsHostGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24HostsHostGroups",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/hosts/host-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24HostsHostGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24HostsHostGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24HostsHostGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24HostsProtectionGroups deletes a host from a protection group

  Deletes a host member from a protection group. After the member has been removed, it is no longer protected by the group. Any protection group snapshots that were taken before the member was removed are not affected. Removing a member from a protection group does not delete the member from the array, and the member can be added back to the protection group at any time. The `group_names` parameter represents the name of the protection group, and the `member_names` parameter represents the name of the host. The `group_names` and `member_names` parameters are required and must be set together.
*/
func (a *Client) DeleteAPI24HostsProtectionGroups(params *DeleteAPI24HostsProtectionGroupsParams) (*DeleteApi24HostsProtectionGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24HostsProtectionGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24HostsProtectionGroups",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/hosts/protection-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24HostsProtectionGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24HostsProtectionGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24HostsProtectionGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24Hosts lists hosts

  Returns a list of hosts.
*/
func (a *Client) GetAPI24Hosts(params *GetAPI24HostsParams) (*GetApi24HostsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24Hosts",
		Method:             "GET",
		PathPattern:        "/api/2.4/hosts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24Hosts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostsHostGroups lists hosts that are associated with host groups

  Returns a list of hosts that are associated with host groups.
*/
func (a *Client) GetAPI24HostsHostGroups(params *GetAPI24HostsHostGroupsParams) (*GetApi24HostsHostGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostsHostGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostsHostGroups",
		Method:             "GET",
		PathPattern:        "/api/2.4/hosts/host-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostsHostGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostsHostGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostsHostGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostsPerformance lists host performance data

  Displays real-time and historical performance data, real-time latency data, and average I/O sizes across all volumes, displayed both by host and as a total across all hosts.
*/
func (a *Client) GetAPI24HostsPerformance(params *GetAPI24HostsPerformanceParams) (*GetApi24HostsPerformanceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostsPerformanceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostsPerformance",
		Method:             "GET",
		PathPattern:        "/api/2.4/hosts/performance",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostsPerformanceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostsPerformanceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostsPerformance: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostsPerformanceBalance lists host performance balance

  Displays the I/O balance statistics for host paths.
*/
func (a *Client) GetAPI24HostsPerformanceBalance(params *GetAPI24HostsPerformanceBalanceParams) (*GetApi24HostsPerformanceBalanceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostsPerformanceBalanceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostsPerformanceBalance",
		Method:             "GET",
		PathPattern:        "/api/2.4/hosts/performance/balance",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostsPerformanceBalanceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostsPerformanceBalanceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostsPerformanceBalance: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostsPerformanceByArray lists host performance data by array

  Displays real-time and historical performance data, real-time latency data, and average I/O size data. The data returned is for each volume that is connected to a host on the current array and for each volume that is connected to a host on any remote arrays that are visible to the current array. The data is displayed as a total across all hosts on each array and by individual host.
*/
func (a *Client) GetAPI24HostsPerformanceByArray(params *GetAPI24HostsPerformanceByArrayParams) (*GetApi24HostsPerformanceByArrayOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostsPerformanceByArrayParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostsPerformanceByArray",
		Method:             "GET",
		PathPattern:        "/api/2.4/hosts/performance/by-array",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostsPerformanceByArrayReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostsPerformanceByArrayOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostsPerformanceByArray: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostsProtectionGroups lists hosts that are members of protection groups

  Displays a list of host members that belong to one or more protection groups.
*/
func (a *Client) GetAPI24HostsProtectionGroups(params *GetAPI24HostsProtectionGroupsParams) (*GetApi24HostsProtectionGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostsProtectionGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostsProtectionGroups",
		Method:             "GET",
		PathPattern:        "/api/2.4/hosts/protection-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostsProtectionGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostsProtectionGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostsProtectionGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostsSpace lists host space information

  Returns provisioned (virtual) size and physical storage consumption data for each host.
*/
func (a *Client) GetAPI24HostsSpace(params *GetAPI24HostsSpaceParams) (*GetApi24HostsSpaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostsSpaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostsSpace",
		Method:             "GET",
		PathPattern:        "/api/2.4/hosts/space",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostsSpaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostsSpaceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostsSpace: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24Hosts manages a host

  Manages an existing host, including its storage network addresses, CHAP, host personality, and preferred arrays, or associate a host to a host group. The `names` query parameter is required.
*/
func (a *Client) PatchAPI24Hosts(params *PatchAPI24HostsParams) (*PatchApi24HostsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24HostsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24Hosts",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/hosts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24HostsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24HostsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24Hosts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24Hosts creates a host

  Creates a host. The `names` query parameter is required.
*/
func (a *Client) PostAPI24Hosts(params *PostAPI24HostsParams) (*PostApi24HostsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24HostsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24Hosts",
		Method:             "POST",
		PathPattern:        "/api/2.4/hosts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24HostsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24HostsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24Hosts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24HostsHostGroups adds a host to a host group

  Adds a host to a host group. Adding a host to a host group automatically connects the host to all volumes associated with the group. Multiple hosts can be belong to a host group, but a host can only belong to one host group. Hosts can be added to host groups at any time. The `group_names` and `member_names` parameters are required and must be set together, and only one host group can be specified at a time.
*/
func (a *Client) PostAPI24HostsHostGroups(params *PostAPI24HostsHostGroupsParams) (*PostApi24HostsHostGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24HostsHostGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24HostsHostGroups",
		Method:             "POST",
		PathPattern:        "/api/2.4/hosts/host-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24HostsHostGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24HostsHostGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24HostsHostGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24HostsProtectionGroups creates a host

  Creates a host member and adds it to a protection group. Members that are already in the protection group are not affected. For asynchronous replication, only members of the same type can belong to a protection group. The `group_names` parameter represents the name of the protection group, and the `member_names` parameter represents the name of the host. The `group_names` and `member_names` parameters are required and must be set together.
*/
func (a *Client) PostAPI24HostsProtectionGroups(params *PostAPI24HostsProtectionGroupsParams) (*PostApi24HostsProtectionGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24HostsProtectionGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24HostsProtectionGroups",
		Method:             "POST",
		PathPattern:        "/api/2.4/hosts/protection-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24HostsProtectionGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24HostsProtectionGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24HostsProtectionGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
