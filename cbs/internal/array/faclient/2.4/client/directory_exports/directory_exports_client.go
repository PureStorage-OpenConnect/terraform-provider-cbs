// Code generated by go-swagger; DO NOT EDIT.

package directory_exports

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new directory exports API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for directory exports API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24DirectoryExports(params *DeleteAPI24DirectoryExportsParams) (*DeleteApi24DirectoryExportsOK, error)

	GetAPI24DirectoryExports(params *GetAPI24DirectoryExportsParams) (*GetApi24DirectoryExportsOK, error)

	PostAPI24DirectoryExports(params *PostAPI24DirectoryExportsParams) (*PostApi24DirectoryExportsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24DirectoryExports deletes directory exports

  Deletes one or more directory exports. If any of the `export_names` is not unique across the system, `policy_ids` or `policy_names` must be specified to determine the exports.
*/
func (a *Client) DeleteAPI24DirectoryExports(params *DeleteAPI24DirectoryExportsParams) (*DeleteApi24DirectoryExportsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24DirectoryExportsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24DirectoryExports",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/directory-exports",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24DirectoryExportsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24DirectoryExportsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24DirectoryExports: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24DirectoryExports lists directory exports

  Displays a list of directory exports.
*/
func (a *Client) GetAPI24DirectoryExports(params *GetAPI24DirectoryExportsParams) (*GetApi24DirectoryExportsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24DirectoryExportsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24DirectoryExports",
		Method:             "GET",
		PathPattern:        "/api/2.4/directory-exports",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24DirectoryExportsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24DirectoryExportsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24DirectoryExports: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24DirectoryExports creates directory exports

  Creates an export of a managed directory. The `directory_ids` or `directory_names` parameter is required, but cannot be set together. The `policy_ids` or `policy_names` parameter is required, but cannot be set together.
*/
func (a *Client) PostAPI24DirectoryExports(params *PostAPI24DirectoryExportsParams) (*PostApi24DirectoryExportsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24DirectoryExportsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24DirectoryExports",
		Method:             "POST",
		PathPattern:        "/api/2.4/directory-exports",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24DirectoryExportsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24DirectoryExportsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24DirectoryExports: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
