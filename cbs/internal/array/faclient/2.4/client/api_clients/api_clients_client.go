// Code generated by go-swagger; DO NOT EDIT.

package api_clients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new api clients API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for api clients API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24APIClients(params *DeleteAPI24APIClientsParams) (*DeleteApi24APIClientsOK, error)

	GetAPI24APIClients(params *GetAPI24APIClientsParams) (*GetApi24APIClientsOK, error)

	PatchAPI24APIClients(params *PatchAPI24APIClientsParams) (*PatchApi24APIClientsOK, error)

	PostAPI24APIClients(params *PostAPI24APIClientsParams) (*PostApi24APIClientsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24APIClients deletes an API client

  Deletes an API client. The `ids` or `names` parameter is required, but cannot be set together.
*/
func (a *Client) DeleteAPI24APIClients(params *DeleteAPI24APIClientsParams) (*DeleteApi24APIClientsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24APIClientsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24APIClients",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/api-clients",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24APIClientsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24APIClientsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24APIClients: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24APIClients lists API clients

  Returns a list of API clients.
*/
func (a *Client) GetAPI24APIClients(params *GetAPI24APIClientsParams) (*GetApi24APIClientsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24APIClientsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24APIClients",
		Method:             "GET",
		PathPattern:        "/api/2.4/api-clients",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24APIClientsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24APIClientsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24APIClients: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24APIClients manages an API client

  Enables or disables an API client. The `ids` or `names` parameter is required, but cannot be set together.
*/
func (a *Client) PatchAPI24APIClients(params *PatchAPI24APIClientsParams) (*PatchApi24APIClientsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24APIClientsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24APIClients",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/api-clients",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24APIClientsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24APIClientsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24APIClients: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24APIClients creates an API client

  Creates an API client. Newly created API clients are disabled by default. Enable an API client through the `PATCH` method. The `names`, `max_role`, `issuer`, and `public_key` parameters are required.
*/
func (a *Client) PostAPI24APIClients(params *PostAPI24APIClientsParams) (*PostApi24APIClientsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24APIClientsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24APIClients",
		Method:             "POST",
		PathPattern:        "/api/2.4/api-clients",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24APIClientsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24APIClientsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24APIClients: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
