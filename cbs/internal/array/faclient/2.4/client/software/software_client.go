// Code generated by go-swagger; DO NOT EDIT.

package software

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new software API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for software API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetAPI24Software(params *GetAPI24SoftwareParams) (*GetApi24SoftwareOK, error)

	GetAPI24SoftwareInstallationSteps(params *GetAPI24SoftwareInstallationStepsParams) (*GetApi24SoftwareInstallationStepsOK, error)

	GetAPI24SoftwareInstallations(params *GetAPI24SoftwareInstallationsParams) (*GetApi24SoftwareInstallationsOK, error)

	PatchAPI24SoftwareInstallations(params *PatchAPI24SoftwareInstallationsParams) (*PatchApi24SoftwareInstallationsOK, error)

	PostAPI24SoftwareInstallations(params *PostAPI24SoftwareInstallationsParams) (*PostApi24SoftwareInstallationsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetAPI24Software lists software

  Displays a list of software versions available for update and the installation status of each software version.
*/
func (a *Client) GetAPI24Software(params *GetAPI24SoftwareParams) (*GetApi24SoftwareOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24SoftwareParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24Software",
		Method:             "GET",
		PathPattern:        "/api/2.4/software",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24SoftwareReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24SoftwareOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24Software: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24SoftwareInstallationSteps lists software upgrade steps

  Displays a list of currently running and completed software upgrade steps.
*/
func (a *Client) GetAPI24SoftwareInstallationSteps(params *GetAPI24SoftwareInstallationStepsParams) (*GetApi24SoftwareInstallationStepsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24SoftwareInstallationStepsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24SoftwareInstallationSteps",
		Method:             "GET",
		PathPattern:        "/api/2.4/software-installation-steps",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24SoftwareInstallationStepsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24SoftwareInstallationStepsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24SoftwareInstallationSteps: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24SoftwareInstallations lists software upgrades

  Displays a list of software upgrades. This returns both currently running and past upgrades.
*/
func (a *Client) GetAPI24SoftwareInstallations(params *GetAPI24SoftwareInstallationsParams) (*GetApi24SoftwareInstallationsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24SoftwareInstallationsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24SoftwareInstallations",
		Method:             "GET",
		PathPattern:        "/api/2.4/software-installations",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24SoftwareInstallationsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24SoftwareInstallationsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24SoftwareInstallations: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24SoftwareInstallations modifies software upgrade

  Modifies a software upgrade by continuing, retrying, or aborting it. All `override_checks` are updated before the command being issued if `add_override_checks` is present. The `override_checks` parameter is valid when `command` is `continue` or `retry`.
*/
func (a *Client) PatchAPI24SoftwareInstallations(params *PatchAPI24SoftwareInstallationsParams) (*PatchApi24SoftwareInstallationsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24SoftwareInstallationsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24SoftwareInstallations",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/software-installations",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24SoftwareInstallationsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24SoftwareInstallationsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24SoftwareInstallations: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24SoftwareInstallations creates a software upgrade

  Creates and initiates a software upgrade.
*/
func (a *Client) PostAPI24SoftwareInstallations(params *PostAPI24SoftwareInstallationsParams) (*PostApi24SoftwareInstallationsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24SoftwareInstallationsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24SoftwareInstallations",
		Method:             "POST",
		PathPattern:        "/api/2.4/software-installations",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24SoftwareInstallationsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24SoftwareInstallationsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24SoftwareInstallations: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
