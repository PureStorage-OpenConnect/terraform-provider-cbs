// Code generated by go-swagger; DO NOT EDIT.

package directories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new directories API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for directories API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24Directories(params *DeleteAPI24DirectoriesParams) (*DeleteApi24DirectoriesOK, error)

	DeleteAPI24DirectoriesPoliciesNfs(params *DeleteAPI24DirectoriesPoliciesNfsParams) (*DeleteApi24DirectoriesPoliciesNfsOK, error)

	DeleteAPI24DirectoriesPoliciesSmb(params *DeleteAPI24DirectoriesPoliciesSmbParams) (*DeleteApi24DirectoriesPoliciesSmbOK, error)

	DeleteAPI24DirectoriesPoliciesSnapshot(params *DeleteAPI24DirectoriesPoliciesSnapshotParams) (*DeleteApi24DirectoriesPoliciesSnapshotOK, error)

	GetAPI24Directories(params *GetAPI24DirectoriesParams) (*GetApi24DirectoriesOK, error)

	GetAPI24DirectoriesPerformance(params *GetAPI24DirectoriesPerformanceParams) (*GetApi24DirectoriesPerformanceOK, error)

	GetAPI24DirectoriesPolicies(params *GetAPI24DirectoriesPoliciesParams) (*GetApi24DirectoriesPoliciesOK, error)

	GetAPI24DirectoriesPoliciesNfs(params *GetAPI24DirectoriesPoliciesNfsParams) (*GetApi24DirectoriesPoliciesNfsOK, error)

	GetAPI24DirectoriesPoliciesSmb(params *GetAPI24DirectoriesPoliciesSmbParams) (*GetApi24DirectoriesPoliciesSmbOK, error)

	GetAPI24DirectoriesPoliciesSnapshot(params *GetAPI24DirectoriesPoliciesSnapshotParams) (*GetApi24DirectoriesPoliciesSnapshotOK, error)

	GetAPI24DirectoriesSpace(params *GetAPI24DirectoriesSpaceParams) (*GetApi24DirectoriesSpaceOK, error)

	PatchAPI24Directories(params *PatchAPI24DirectoriesParams) (*PatchApi24DirectoriesOK, error)

	PostAPI24Directories(params *PostAPI24DirectoriesParams) (*PostApi24DirectoriesOK, error)

	PostAPI24DirectoriesPoliciesNfs(params *PostAPI24DirectoriesPoliciesNfsParams) (*PostApi24DirectoriesPoliciesNfsOK, error)

	PostAPI24DirectoriesPoliciesSmb(params *PostAPI24DirectoriesPoliciesSmbParams) (*PostApi24DirectoriesPoliciesSmbOK, error)

	PostAPI24DirectoriesPoliciesSnapshot(params *PostAPI24DirectoriesPoliciesSnapshotParams) (*PostApi24DirectoriesPoliciesSnapshotOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24Directories deletes managed directories

  Deletes one or more managed directories. To be deleted, a managed directory must be empty and not attached to any enabled export policies. Deleted managed directories cannot be recovered. The `ids` or `names` parameter is required, but cannot be set together.
*/
func (a *Client) DeleteAPI24Directories(params *DeleteAPI24DirectoriesParams) (*DeleteApi24DirectoriesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24DirectoriesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24Directories",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/directories",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24DirectoriesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24DirectoriesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24Directories: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24DirectoriesPoliciesNfs deletes a membership between a directory and one or more n f s policies

  Deletes a membership between a directory with one or more NFS policies. The `policy_ids` or `policy_names` parameter is required, but cannot be set together. The `member_ids` or `member_names` parameter is required, but cannot be set together.
*/
func (a *Client) DeleteAPI24DirectoriesPoliciesNfs(params *DeleteAPI24DirectoriesPoliciesNfsParams) (*DeleteApi24DirectoriesPoliciesNfsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24DirectoriesPoliciesNfsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24DirectoriesPoliciesNfs",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/directories/policies/nfs",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24DirectoriesPoliciesNfsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24DirectoriesPoliciesNfsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24DirectoriesPoliciesNfs: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24DirectoriesPoliciesSmb deletes a membership between a directory and one or more s m b policies

  Deletes a membership between a directory with one or more SMB policies. The `policy_ids` or `policy_names` parameter is required, but cannot be set together. The `member_ids` or `member_names` parameter is required, but cannot be set together.
*/
func (a *Client) DeleteAPI24DirectoriesPoliciesSmb(params *DeleteAPI24DirectoriesPoliciesSmbParams) (*DeleteApi24DirectoriesPoliciesSmbOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24DirectoriesPoliciesSmbParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24DirectoriesPoliciesSmb",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/directories/policies/smb",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24DirectoriesPoliciesSmbReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24DirectoriesPoliciesSmbOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24DirectoriesPoliciesSmb: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24DirectoriesPoliciesSnapshot deletes a membership between a directory and one or more snapshot policies

  Deletes a membership between a directory with one or more snapshot policies. The `policy_ids` or `policy_names` parameter is required, but cannot be set together. The `member_ids` or `member_names` parameter is required, but cannot be set together.
*/
func (a *Client) DeleteAPI24DirectoriesPoliciesSnapshot(params *DeleteAPI24DirectoriesPoliciesSnapshotParams) (*DeleteApi24DirectoriesPoliciesSnapshotOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24DirectoriesPoliciesSnapshotParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24DirectoriesPoliciesSnapshot",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/directories/policies/snapshot",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24DirectoriesPoliciesSnapshotReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24DirectoriesPoliciesSnapshotOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24DirectoriesPoliciesSnapshot: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24Directories lists directories

  Displays a list of directories, including those pending eradication.
*/
func (a *Client) GetAPI24Directories(params *GetAPI24DirectoriesParams) (*GetApi24DirectoriesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24DirectoriesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24Directories",
		Method:             "GET",
		PathPattern:        "/api/2.4/directories",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24DirectoriesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24DirectoriesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24Directories: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24DirectoriesPerformance lists directory performance data

  Displays real-time and historical performance data, real-time latency data, and average I/O sizes for each directory and as a total of all directories across the entire array.
*/
func (a *Client) GetAPI24DirectoriesPerformance(params *GetAPI24DirectoriesPerformanceParams) (*GetApi24DirectoriesPerformanceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24DirectoriesPerformanceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24DirectoriesPerformance",
		Method:             "GET",
		PathPattern:        "/api/2.4/directories/performance",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24DirectoriesPerformanceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24DirectoriesPerformanceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24DirectoriesPerformance: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24DirectoriesPolicies lists policies

  Displays a list of policies that are attached to directories.
*/
func (a *Client) GetAPI24DirectoriesPolicies(params *GetAPI24DirectoriesPoliciesParams) (*GetApi24DirectoriesPoliciesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24DirectoriesPoliciesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24DirectoriesPolicies",
		Method:             "GET",
		PathPattern:        "/api/2.4/directories/policies",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24DirectoriesPoliciesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24DirectoriesPoliciesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24DirectoriesPolicies: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24DirectoriesPoliciesNfs lists n f s policies attached to a directory

  Displays a list of NFS policies that are attached to directories.
*/
func (a *Client) GetAPI24DirectoriesPoliciesNfs(params *GetAPI24DirectoriesPoliciesNfsParams) (*GetApi24DirectoriesPoliciesNfsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24DirectoriesPoliciesNfsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24DirectoriesPoliciesNfs",
		Method:             "GET",
		PathPattern:        "/api/2.4/directories/policies/nfs",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24DirectoriesPoliciesNfsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24DirectoriesPoliciesNfsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24DirectoriesPoliciesNfs: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24DirectoriesPoliciesSmb lists s m b policies attached to a directory

  Displays a list of SMB policies that are attached to directories.
*/
func (a *Client) GetAPI24DirectoriesPoliciesSmb(params *GetAPI24DirectoriesPoliciesSmbParams) (*GetApi24DirectoriesPoliciesSmbOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24DirectoriesPoliciesSmbParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24DirectoriesPoliciesSmb",
		Method:             "GET",
		PathPattern:        "/api/2.4/directories/policies/smb",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24DirectoriesPoliciesSmbReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24DirectoriesPoliciesSmbOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24DirectoriesPoliciesSmb: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24DirectoriesPoliciesSnapshot lists snapshot policies attached to a directory

  Displays a list of snapshot policies that are attached to directories.
*/
func (a *Client) GetAPI24DirectoriesPoliciesSnapshot(params *GetAPI24DirectoriesPoliciesSnapshotParams) (*GetApi24DirectoriesPoliciesSnapshotOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24DirectoriesPoliciesSnapshotParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24DirectoriesPoliciesSnapshot",
		Method:             "GET",
		PathPattern:        "/api/2.4/directories/policies/snapshot",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24DirectoriesPoliciesSnapshotReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24DirectoriesPoliciesSnapshotOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24DirectoriesPoliciesSnapshot: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24DirectoriesSpace lists directory space information

  Displays physical storage consumption data for each directory.
*/
func (a *Client) GetAPI24DirectoriesSpace(params *GetAPI24DirectoriesSpaceParams) (*GetApi24DirectoriesSpaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24DirectoriesSpaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24DirectoriesSpace",
		Method:             "GET",
		PathPattern:        "/api/2.4/directories/space",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24DirectoriesSpaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24DirectoriesSpaceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24DirectoriesSpace: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24Directories modifies a managed directory

  Modifies a managed directory. To rename a managed directory, set `name` to the new name. The `ids` or `names` parameter is required, but cannot be set together.
*/
func (a *Client) PatchAPI24Directories(params *PatchAPI24DirectoriesParams) (*PatchApi24DirectoriesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24DirectoriesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24Directories",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/directories",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24DirectoriesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24DirectoriesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24Directories: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24Directories creates directory

  Creates a managed directory at the specified path. The managed directory name must consist of a file system name prefix and a managed directory name suffix (separated with '&#58;'). The suffix must be between 1 and 63 characters (alphanumeric and '-') in length and begin and end with a letter or number. The suffix must include at least one letter or '-'. Either set `names` to create a managed directory with the specified full managed directory name, or set `file_system_names` or `file_system_ids` in the query parameters and `suffix` in the body parameters to create a managed directory in the specified file system with the specified suffix. These two options are exclusive.
*/
func (a *Client) PostAPI24Directories(params *PostAPI24DirectoriesParams) (*PostApi24DirectoriesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24DirectoriesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24Directories",
		Method:             "POST",
		PathPattern:        "/api/2.4/directories",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24DirectoriesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24DirectoriesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24Directories: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24DirectoriesPoliciesNfs creates a membership between a directory with one or more n f s policies

  Creates a membership between a directory with one or more NFS policies. The `member_ids` or `member_names` parameter is required but cannot be set together.
*/
func (a *Client) PostAPI24DirectoriesPoliciesNfs(params *PostAPI24DirectoriesPoliciesNfsParams) (*PostApi24DirectoriesPoliciesNfsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24DirectoriesPoliciesNfsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24DirectoriesPoliciesNfs",
		Method:             "POST",
		PathPattern:        "/api/2.4/directories/policies/nfs",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24DirectoriesPoliciesNfsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24DirectoriesPoliciesNfsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24DirectoriesPoliciesNfs: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24DirectoriesPoliciesSmb creates a membership between a directory with one or more n f s policies

  Creates a membership between a directory with one or more NFS policies. The `member_ids` or `member_names` parameter is required, but cannot be set together.
*/
func (a *Client) PostAPI24DirectoriesPoliciesSmb(params *PostAPI24DirectoriesPoliciesSmbParams) (*PostApi24DirectoriesPoliciesSmbOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24DirectoriesPoliciesSmbParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24DirectoriesPoliciesSmb",
		Method:             "POST",
		PathPattern:        "/api/2.4/directories/policies/smb",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24DirectoriesPoliciesSmbReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24DirectoriesPoliciesSmbOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24DirectoriesPoliciesSmb: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24DirectoriesPoliciesSnapshot creates a membership between a directory with one or more snapshot policies

  Creates a membership between a directory with one or more snapshot policies. The `member_ids` or `member_names` parameter is required, but cannot be set together.
*/
func (a *Client) PostAPI24DirectoriesPoliciesSnapshot(params *PostAPI24DirectoriesPoliciesSnapshotParams) (*PostApi24DirectoriesPoliciesSnapshotOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24DirectoriesPoliciesSnapshotParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24DirectoriesPoliciesSnapshot",
		Method:             "POST",
		PathPattern:        "/api/2.4/directories/policies/snapshot",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24DirectoriesPoliciesSnapshotReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24DirectoriesPoliciesSnapshotOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24DirectoriesPoliciesSnapshot: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
