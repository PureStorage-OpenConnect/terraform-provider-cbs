// Code generated by go-swagger; DO NOT EDIT.

package host_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new host groups API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for host groups API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24HostGroups(params *DeleteAPI24HostGroupsParams) (*DeleteApi24HostGroupsOK, error)

	DeleteAPI24HostGroupsHosts(params *DeleteAPI24HostGroupsHostsParams) (*DeleteApi24HostGroupsHostsOK, error)

	DeleteAPI24HostGroupsProtectionGroups(params *DeleteAPI24HostGroupsProtectionGroupsParams) (*DeleteApi24HostGroupsProtectionGroupsOK, error)

	GetAPI24HostGroups(params *GetAPI24HostGroupsParams) (*GetApi24HostGroupsOK, error)

	GetAPI24HostGroupsHosts(params *GetAPI24HostGroupsHostsParams) (*GetApi24HostGroupsHostsOK, error)

	GetAPI24HostGroupsPerformance(params *GetAPI24HostGroupsPerformanceParams) (*GetApi24HostGroupsPerformanceOK, error)

	GetAPI24HostGroupsPerformanceByArray(params *GetAPI24HostGroupsPerformanceByArrayParams) (*GetApi24HostGroupsPerformanceByArrayOK, error)

	GetAPI24HostGroupsProtectionGroups(params *GetAPI24HostGroupsProtectionGroupsParams) (*GetApi24HostGroupsProtectionGroupsOK, error)

	GetAPI24HostGroupsSpace(params *GetAPI24HostGroupsSpaceParams) (*GetApi24HostGroupsSpaceOK, error)

	PatchAPI24HostGroups(params *PatchAPI24HostGroupsParams) (*PatchApi24HostGroupsOK, error)

	PostAPI24HostGroups(params *PostAPI24HostGroupsParams) (*PostApi24HostGroupsOK, error)

	PostAPI24HostGroupsHosts(params *PostAPI24HostGroupsHostsParams) (*PostApi24HostGroupsHostsOK, error)

	PostAPI24HostGroupsProtectionGroups(params *PostAPI24HostGroupsProtectionGroupsParams) (*PostApi24HostGroupsProtectionGroupsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24HostGroups deletes a host group

  Deletes a host group. The `names` query parameter is required.
*/
func (a *Client) DeleteAPI24HostGroups(params *DeleteAPI24HostGroupsParams) (*DeleteApi24HostGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24HostGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24HostGroups",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/host-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24HostGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24HostGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24HostGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24HostGroupsHosts removes a host from a host group

  Removes a host from a host group. Removing a host from a host group automatically disconnects the host from all volumes associated with the group. Hosts can be removed from host groups at any time. The `group_names` and `member_names` parameters are required and must be set together, and only one host group can be specified at a time.
*/
func (a *Client) DeleteAPI24HostGroupsHosts(params *DeleteAPI24HostGroupsHostsParams) (*DeleteApi24HostGroupsHostsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24HostGroupsHostsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24HostGroupsHosts",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/host-groups/hosts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24HostGroupsHostsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24HostGroupsHostsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24HostGroupsHosts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24HostGroupsProtectionGroups deletes a host group from a protection group

  Deletes a host group member from a protection group. After the member has been removed, it is no longer protected by the group. Any protection group snapshots that were taken before the member was removed are not affected. Removing a member from a protection group does not delete the member from the array, and the member can be added back to the protection group at any time. The `group_names` parameter represents the name of the protection group, and the `member_names` parameter represents the name of the host group. The `group_names` and `member_names` parameters are required and must be set together.
*/
func (a *Client) DeleteAPI24HostGroupsProtectionGroups(params *DeleteAPI24HostGroupsProtectionGroupsParams) (*DeleteApi24HostGroupsProtectionGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24HostGroupsProtectionGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24HostGroupsProtectionGroups",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/host-groups/protection-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24HostGroupsProtectionGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24HostGroupsProtectionGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24HostGroupsProtectionGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostGroups lists host groups

  Returns a list of host groups.
*/
func (a *Client) GetAPI24HostGroups(params *GetAPI24HostGroupsParams) (*GetApi24HostGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostGroups",
		Method:             "GET",
		PathPattern:        "/api/2.4/host-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostGroupsHosts lists host groups that are associated with hosts

  Returns a list of host groups that are associated with hosts.
*/
func (a *Client) GetAPI24HostGroupsHosts(params *GetAPI24HostGroupsHostsParams) (*GetApi24HostGroupsHostsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostGroupsHostsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostGroupsHosts",
		Method:             "GET",
		PathPattern:        "/api/2.4/host-groups/hosts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostGroupsHostsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostGroupsHostsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostGroupsHosts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostGroupsPerformance lists host group performance data

  Displays real-time and historical performance data, real-time latency data, and average I/O sizes across all volumes, displayed both by host group and as a total across all host groups.
*/
func (a *Client) GetAPI24HostGroupsPerformance(params *GetAPI24HostGroupsPerformanceParams) (*GetApi24HostGroupsPerformanceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostGroupsPerformanceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostGroupsPerformance",
		Method:             "GET",
		PathPattern:        "/api/2.4/host-groups/performance",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostGroupsPerformanceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostGroupsPerformanceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostGroupsPerformance: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostGroupsPerformanceByArray lists host group performance data by array

  Displays real-time and historical performance data, real-time latency data, and average I/O size data. The displayed data is for each volume that is connected to a host group on the current array and for each volume that is connected to a host group on any remote arrays that are visible to the current array. The data is displayed as a total across all host groups on each array and by individual host group.
*/
func (a *Client) GetAPI24HostGroupsPerformanceByArray(params *GetAPI24HostGroupsPerformanceByArrayParams) (*GetApi24HostGroupsPerformanceByArrayOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostGroupsPerformanceByArrayParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostGroupsPerformanceByArray",
		Method:             "GET",
		PathPattern:        "/api/2.4/host-groups/performance/by-array",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostGroupsPerformanceByArrayReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostGroupsPerformanceByArrayOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostGroupsPerformanceByArray: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostGroupsProtectionGroups lists host groups that are members of protection groups

  Displays a list of host group members that belong to one or more protection groups.
*/
func (a *Client) GetAPI24HostGroupsProtectionGroups(params *GetAPI24HostGroupsProtectionGroupsParams) (*GetApi24HostGroupsProtectionGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostGroupsProtectionGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostGroupsProtectionGroups",
		Method:             "GET",
		PathPattern:        "/api/2.4/host-groups/protection-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostGroupsProtectionGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostGroupsProtectionGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostGroupsProtectionGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24HostGroupsSpace lists host group space information

  Returns provisioned (virtual) size and physical storage consumption data for each host group.
*/
func (a *Client) GetAPI24HostGroupsSpace(params *GetAPI24HostGroupsSpaceParams) (*GetApi24HostGroupsSpaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24HostGroupsSpaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24HostGroupsSpace",
		Method:             "GET",
		PathPattern:        "/api/2.4/host-groups/space",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24HostGroupsSpaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24HostGroupsSpaceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24HostGroupsSpace: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24HostGroups manages a host group

  Manages a host group. The `names` query parameter is required.
*/
func (a *Client) PatchAPI24HostGroups(params *PatchAPI24HostGroupsParams) (*PatchApi24HostGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24HostGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24HostGroups",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/host-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24HostGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24HostGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24HostGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24HostGroups creates a host group

  Creates a host group. The `names` query parameter is required.
*/
func (a *Client) PostAPI24HostGroups(params *PostAPI24HostGroupsParams) (*PostApi24HostGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24HostGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24HostGroups",
		Method:             "POST",
		PathPattern:        "/api/2.4/host-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24HostGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24HostGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24HostGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24HostGroupsHosts adds a host to a host group

  Adds a host to a host group. Adding a host to a host group automatically connects the host to all volumes associated with the group. Multiple hosts can be belong to a host group, but a host can only belong to one host group. Hosts can be added to host groups at any time. The `group_names` and `member_names` parameters are required and must be set together, and only one host group can be specified at a time.
*/
func (a *Client) PostAPI24HostGroupsHosts(params *PostAPI24HostGroupsHostsParams) (*PostApi24HostGroupsHostsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24HostGroupsHostsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24HostGroupsHosts",
		Method:             "POST",
		PathPattern:        "/api/2.4/host-groups/hosts",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24HostGroupsHostsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24HostGroupsHostsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24HostGroupsHosts: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24HostGroupsProtectionGroups creates a host group

  Creates a host group member and assigns to a protection group. Members that are already in the protection group are not affected. For asynchronous replication, only members of the same type can belong to a protection group. The `group_names` parameter represents the name of the protection group, and the `member_names` parameter represents the name of the host group. The `group_names` and `member_names` parameters are required and must be set together.
*/
func (a *Client) PostAPI24HostGroupsProtectionGroups(params *PostAPI24HostGroupsProtectionGroupsParams) (*PostApi24HostGroupsProtectionGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24HostGroupsProtectionGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24HostGroupsProtectionGroups",
		Method:             "POST",
		PathPattern:        "/api/2.4/host-groups/protection-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24HostGroupsProtectionGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24HostGroupsProtectionGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24HostGroupsProtectionGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
