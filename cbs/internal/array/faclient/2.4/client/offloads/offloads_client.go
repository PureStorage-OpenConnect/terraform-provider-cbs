// Code generated by go-swagger; DO NOT EDIT.

package offloads

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new offloads API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for offloads API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24Offloads(params *DeleteAPI24OffloadsParams) (*DeleteApi24OffloadsOK, error)

	GetAPI24Offloads(params *GetAPI24OffloadsParams) (*GetApi24OffloadsOK, error)

	PostAPI24Offloads(params *PostAPI24OffloadsParams) (*PostApi24OffloadsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24Offloads deletes offload target

  Deletes an offload target.
*/
func (a *Client) DeleteAPI24Offloads(params *DeleteAPI24OffloadsParams) (*DeleteApi24OffloadsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24OffloadsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24Offloads",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/offloads",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24OffloadsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24OffloadsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24Offloads: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24Offloads lists offload targets

  Displays a list of offload targets that are connected to the array.
*/
func (a *Client) GetAPI24Offloads(params *GetAPI24OffloadsParams) (*GetApi24OffloadsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24OffloadsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24Offloads",
		Method:             "GET",
		PathPattern:        "/api/2.4/offloads",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24OffloadsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24OffloadsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24Offloads: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24Offloads creates offload target

  Creates an offload target, connecting it to an array. Before you can connect to, manage, and replicate to an offload target, the Purity Run app must be installed. For more information about Purity//FA apps, see the Apps section of this guide.
*/
func (a *Client) PostAPI24Offloads(params *PostAPI24OffloadsParams) (*PostApi24OffloadsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24OffloadsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24Offloads",
		Method:             "POST",
		PathPattern:        "/api/2.4/offloads",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24OffloadsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24OffloadsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24Offloads: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
