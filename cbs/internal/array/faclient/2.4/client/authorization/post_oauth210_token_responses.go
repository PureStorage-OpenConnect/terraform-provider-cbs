// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.dev.purestorage.com/FlashArray/terraform-provider-cbs/cbs/internal/array/faclient/2.4/models"
)

// PostOauth210TokenReader is a Reader for the PostOauth210Token structure.
type PostOauth210TokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOauth210TokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOauth210TokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOauth210TokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostOauth210TokenUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostOauth210TokenOK creates a PostOauth210TokenOK with default headers values
func NewPostOauth210TokenOK() *PostOauth210TokenOK {
	return &PostOauth210TokenOK{}
}

/*PostOauth210TokenOK handles this case with default header values.

OK
*/
type PostOauth210TokenOK struct {
	Payload *models.PostOauth210TokenOKBody
}

func (o *PostOauth210TokenOK) Error() string {
	return fmt.Sprintf("[POST /oauth2/1.0/token][%d] postOauth210TokenOK  %+v", 200, o.Payload)
}

func (o *PostOauth210TokenOK) GetPayload() *models.PostOauth210TokenOKBody {
	return o.Payload
}

func (o *PostOauth210TokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostOauth210TokenOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauth210TokenBadRequest creates a PostOauth210TokenBadRequest with default headers values
func NewPostOauth210TokenBadRequest() *PostOauth210TokenBadRequest {
	return &PostOauth210TokenBadRequest{}
}

/*PostOauth210TokenBadRequest handles this case with default header values.

BAD REQUEST
*/
type PostOauth210TokenBadRequest struct {
	Payload *models.PostOauth210TokenBadRequestBody
}

func (o *PostOauth210TokenBadRequest) Error() string {
	return fmt.Sprintf("[POST /oauth2/1.0/token][%d] postOauth210TokenBadRequest  %+v", 400, o.Payload)
}

func (o *PostOauth210TokenBadRequest) GetPayload() *models.PostOauth210TokenBadRequestBody {
	return o.Payload
}

func (o *PostOauth210TokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostOauth210TokenBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOauth210TokenUnauthorized creates a PostOauth210TokenUnauthorized with default headers values
func NewPostOauth210TokenUnauthorized() *PostOauth210TokenUnauthorized {
	return &PostOauth210TokenUnauthorized{}
}

/*PostOauth210TokenUnauthorized handles this case with default header values.

UNAUTHORIZED
*/
type PostOauth210TokenUnauthorized struct {
	Payload *models.PostOauth210TokenUnauthorizedBody
}

func (o *PostOauth210TokenUnauthorized) Error() string {
	return fmt.Sprintf("[POST /oauth2/1.0/token][%d] postOauth210TokenUnauthorized  %+v", 401, o.Payload)
}

func (o *PostOauth210TokenUnauthorized) GetPayload() *models.PostOauth210TokenUnauthorizedBody {
	return o.Payload
}

func (o *PostOauth210TokenUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PostOauth210TokenUnauthorizedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
