// Code generated by go-swagger; DO NOT EDIT.

package pods

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.dev.purestorage.com/FlashArray/terraform-provider-cbs/cbs/internal/array/faclient/2.4/models"
)

// NewPostAPI24PodsParams creates a new PostAPI24PodsParams object
// with the default values initialized.
func NewPostAPI24PodsParams() *PostAPI24PodsParams {
	var ()
	return &PostAPI24PodsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAPI24PodsParamsWithTimeout creates a new PostAPI24PodsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAPI24PodsParamsWithTimeout(timeout time.Duration) *PostAPI24PodsParams {
	var ()
	return &PostAPI24PodsParams{

		timeout: timeout,
	}
}

// NewPostAPI24PodsParamsWithContext creates a new PostAPI24PodsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAPI24PodsParamsWithContext(ctx context.Context) *PostAPI24PodsParams {
	var ()
	return &PostAPI24PodsParams{

		Context: ctx,
	}
}

// NewPostAPI24PodsParamsWithHTTPClient creates a new PostAPI24PodsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAPI24PodsParamsWithHTTPClient(client *http.Client) *PostAPI24PodsParams {
	var ()
	return &PostAPI24PodsParams{
		HTTPClient: client,
	}
}

/*PostAPI24PodsParams contains all the parameters to send to the API endpoint
for the post API 24 pods operation typically these are written to a http.Request
*/
type PostAPI24PodsParams struct {

	/*Names
	  Performs the operation on the unique name specified. Enter multiple names in comma-separated format. For example, `name01,name02`.

	*/
	Names []string
	/*Pod*/
	Pod *models.PodPost

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post API 24 pods params
func (o *PostAPI24PodsParams) WithTimeout(timeout time.Duration) *PostAPI24PodsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post API 24 pods params
func (o *PostAPI24PodsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post API 24 pods params
func (o *PostAPI24PodsParams) WithContext(ctx context.Context) *PostAPI24PodsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post API 24 pods params
func (o *PostAPI24PodsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post API 24 pods params
func (o *PostAPI24PodsParams) WithHTTPClient(client *http.Client) *PostAPI24PodsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post API 24 pods params
func (o *PostAPI24PodsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNames adds the names to the post API 24 pods params
func (o *PostAPI24PodsParams) WithNames(names []string) *PostAPI24PodsParams {
	o.SetNames(names)
	return o
}

// SetNames adds the names to the post API 24 pods params
func (o *PostAPI24PodsParams) SetNames(names []string) {
	o.Names = names
}

// WithPod adds the pod to the post API 24 pods params
func (o *PostAPI24PodsParams) WithPod(pod *models.PodPost) *PostAPI24PodsParams {
	o.SetPod(pod)
	return o
}

// SetPod adds the pod to the post API 24 pods params
func (o *PostAPI24PodsParams) SetPod(pod *models.PodPost) {
	o.Pod = pod
}

// WriteToRequest writes these params to a swagger request
func (o *PostAPI24PodsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesNames := o.Names

	joinedNames := swag.JoinByFormat(valuesNames, "csv")
	// query array param names
	if err := r.SetQueryParam("names", joinedNames...); err != nil {
		return err
	}

	if o.Pod != nil {
		if err := r.SetBodyParam(o.Pod); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
