// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SoftwareInstallationStepAllOf2ChecksItems software installation step all of2 checks items
//
// swagger:model softwareInstallationStepAllOf2ChecksItems
type SoftwareInstallationStepAllOf2ChecksItems struct {

	// Detailed result of the check used to diagnose check failures.
	Details string `json:"details,omitempty"`

	// Name of the upgrade check.
	Name string `json:"name,omitempty"`

	// Whether the check failure can be overridden.
	Overridable bool `json:"overridable,omitempty"`

	// Status of the check. Valid values are `running`, `failed`, `passed`, and `overridden`. A status of `running` indicates that the check has not finished. A status of `failed` indicates that the check has failed. A status of `passed` indicates that the check has passed. A status of `overridden` indicates that the check has failed, but the failure has been overridden.
	Status string `json:"status,omitempty"`
}

// Validate validates this software installation step all of2 checks items
func (m *SoftwareInstallationStepAllOf2ChecksItems) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SoftwareInstallationStepAllOf2ChecksItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SoftwareInstallationStepAllOf2ChecksItems) UnmarshalBinary(b []byte) error {
	var res SoftwareInstallationStepAllOf2ChecksItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
