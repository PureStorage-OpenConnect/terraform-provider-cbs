// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ProtectionGroupSnapshotOAIGenAllOf1 A protection group snapshot is a collection of point-in-time consistent volume snapshots, for volumes associated with the protection group when the snapshot was taken.
//
// swagger:model protectionGroupSnapshotOaiGenAllOf1
type ProtectionGroupSnapshotOAIGenAllOf1 struct {

	// The snapshot creation time of the original snapshot source. Measured in milliseconds since the UNIX epoch.
	// Read Only: true
	Created int64 `json:"created,omitempty"`

	// Returns a value of `true` if the protection group snapshot has been destroyed and is pending eradication. The `time_remaining` value displays the amount of time left until the destroyed snapshot is permanently eradicated. Before the `time_remaining` period has elapsed, the destroyed snapshot can be recovered by setting `destroyed=false`. Once the `time_remaining` period has elapsed, the snapshot is permanently eradicated and can no longer be recovered.
	Destroyed bool `json:"destroyed,omitempty"`

	// pod
	Pod *ProtectionGroupSnapshotOAIGenAllOf1Pod `json:"pod,omitempty"`

	// source
	Source *ProtectionGroupSnapshotOAIGenAllOf1Source `json:"source,omitempty"`

	// space
	Space *ProtectionGroupSnapshotOAIGenAllOf1Space `json:"space,omitempty"`

	// The name suffix appended to the protection group name to make up the full protection group snapshot name in the form `PGROUP.SUFFIX`. If `suffix` is not specified, the protection group name is in the form `PGROUP.NNN`, where `NNN` is a unique monotonically increasing number. If multiple protection group snapshots are created at a time, the suffix name is appended to those snapshots.
	Suffix string `json:"suffix,omitempty"`

	// The amount of time left until the destroyed snapshot is permanently eradicated. Measured in milliseconds. Before the `time_remaining` period has elapsed, the destroyed snapshot can be recovered by setting `destroyed=false`.
	// Read Only: true
	TimeRemaining int64 `json:"time_remaining,omitempty"`
}

// Validate validates this protection group snapshot Oai gen all of1
func (m *ProtectionGroupSnapshotOAIGenAllOf1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePod(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSpace(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProtectionGroupSnapshotOAIGenAllOf1) validatePod(formats strfmt.Registry) error {

	if swag.IsZero(m.Pod) { // not required
		return nil
	}

	if m.Pod != nil {
		if err := m.Pod.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pod")
			}
			return err
		}
	}

	return nil
}

func (m *ProtectionGroupSnapshotOAIGenAllOf1) validateSource(formats strfmt.Registry) error {

	if swag.IsZero(m.Source) { // not required
		return nil
	}

	if m.Source != nil {
		if err := m.Source.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("source")
			}
			return err
		}
	}

	return nil
}

func (m *ProtectionGroupSnapshotOAIGenAllOf1) validateSpace(formats strfmt.Registry) error {

	if swag.IsZero(m.Space) { // not required
		return nil
	}

	if m.Space != nil {
		if err := m.Space.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("space")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProtectionGroupSnapshotOAIGenAllOf1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProtectionGroupSnapshotOAIGenAllOf1) UnmarshalBinary(b []byte) error {
	var res ProtectionGroupSnapshotOAIGenAllOf1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
