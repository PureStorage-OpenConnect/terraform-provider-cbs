// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RemoteProtectionGroupOAIGenAllOf1 A remote protection group represents a protection group that is replicated to an offload target.
//
// swagger:model remoteProtectionGroupOaiGenAllOf1
type RemoteProtectionGroupOAIGenAllOf1 struct {

	// Returns a value of `true` if the remote protection group has been destroyed and is pending eradication. The `time_remaining` value displays the amount of time left until the destroyed remote protection group is permanently eradicated. Before the `time_remaining` period has elapsed, the destroyed remote protection group can be recovered by setting `destroyed=false`. Once the `time_remaining` period has elapsed, the remote protection group is permanently eradicated and can no longer be recovered.
	Destroyed bool `json:"destroyed,omitempty"`

	// If set to `true`, the location reference is to the local array. If set to `false`, the location reference is to a remote location, such as a remote array or offload target.
	// Read Only: true
	IsLocal *bool `json:"is_local,omitempty"`

	// remote
	Remote *RemoteProtectionGroupOAIGenAllOf1Remote `json:"remote,omitempty"`

	// source
	Source *RemoteProtectionGroupOAIGenAllOf1Source `json:"source,omitempty"`

	// target retention
	TargetRetention *RemoteProtectionGroupOAIGenAllOf1TargetRetention `json:"target_retention,omitempty"`

	// Milliseconds remaining until eradication, if remote protection group has been destroyed.
	// Read Only: true
	TimeRemaining int64 `json:"time_remaining,omitempty"`
}

// Validate validates this remote protection group Oai gen all of1
func (m *RemoteProtectionGroupOAIGenAllOf1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRemote(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTargetRetention(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RemoteProtectionGroupOAIGenAllOf1) validateRemote(formats strfmt.Registry) error {

	if swag.IsZero(m.Remote) { // not required
		return nil
	}

	if m.Remote != nil {
		if err := m.Remote.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("remote")
			}
			return err
		}
	}

	return nil
}

func (m *RemoteProtectionGroupOAIGenAllOf1) validateSource(formats strfmt.Registry) error {

	if swag.IsZero(m.Source) { // not required
		return nil
	}

	if m.Source != nil {
		if err := m.Source.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("source")
			}
			return err
		}
	}

	return nil
}

func (m *RemoteProtectionGroupOAIGenAllOf1) validateTargetRetention(formats strfmt.Registry) error {

	if swag.IsZero(m.TargetRetention) { // not required
		return nil
	}

	if m.TargetRetention != nil {
		if err := m.TargetRetention.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("target_retention")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RemoteProtectionGroupOAIGenAllOf1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RemoteProtectionGroupOAIGenAllOf1) UnmarshalBinary(b []byte) error {
	var res RemoteProtectionGroupOAIGenAllOf1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
