// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DirectoryOAIGenAllOf1 directory Oai gen all of1
//
// swagger:model directoryOaiGenAllOf1
type DirectoryOAIGenAllOf1 struct {

	// The managed directory creation time, measured in milliseconds since the UNIX epoch.
	// Read Only: true
	Created int64 `json:"created,omitempty"`

	// Returns a value of `true` if the managed directory has been destroyed and is pending eradication. The `time_remaining` value displays the amount of time left until the destroyed managed directory is permanently eradicated. Once the `time_remaining` period has elapsed, the managed directory is permanently eradicated and can no longer be recovered.
	Destroyed bool `json:"destroyed,omitempty"`

	// The managed directory name without the file system name prefix. A full managed directory name is constructed in the form of `FILE_SYSTEM:DIR` where `FILE_SYSTEM` is the file system name and `DIR` is the value of this field.
	// Read Only: true
	DirectoryName string `json:"directory_name,omitempty"`

	// file system
	FileSystem *DirectoryOAIGenAllOf1FileSystem `json:"file_system,omitempty"`

	// Absolute path of the managed directory in the file system.
	// Read Only: true
	Path string `json:"path,omitempty"`

	// space
	Space *DirectoryOAIGenAllOf1Space `json:"space,omitempty"`

	// The amount of time left, measured in milliseconds until the destroyed managed directory is permanently eradicated.
	// Read Only: true
	TimeRemaining int64 `json:"time_remaining,omitempty"`
}

// Validate validates this directory Oai gen all of1
func (m *DirectoryOAIGenAllOf1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFileSystem(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSpace(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *DirectoryOAIGenAllOf1) validateFileSystem(formats strfmt.Registry) error {

	if swag.IsZero(m.FileSystem) { // not required
		return nil
	}

	if m.FileSystem != nil {
		if err := m.FileSystem.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("file_system")
			}
			return err
		}
	}

	return nil
}

func (m *DirectoryOAIGenAllOf1) validateSpace(formats strfmt.Registry) error {

	if swag.IsZero(m.Space) { // not required
		return nil
	}

	if m.Space != nil {
		if err := m.Space.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("space")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *DirectoryOAIGenAllOf1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DirectoryOAIGenAllOf1) UnmarshalBinary(b []byte) error {
	var res DirectoryOAIGenAllOf1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
