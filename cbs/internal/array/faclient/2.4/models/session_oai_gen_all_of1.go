// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SessionOAIGenAllOf1 User session logs represent user login events performed in the Purity//FA GUI, CLI, and REST API.
//
// swagger:model sessionOaiGenAllOf1
type SessionOAIGenAllOf1 struct {

	// Date and time the user logged out of the Purity//FA interface. Not set if the session is still active.
	EndTime int64 `json:"end_time,omitempty"`

	// Description of session events such as login and user session. Valid values include `failed authentication`, `user session`, `login`, `logout`, `API token obtained`, and `request without session`.
	Event string `json:"event,omitempty"`

	// Number of session events.
	EventCount int32 `json:"event_count,omitempty"`

	// IP address of the user client connecting to the array or console if connected through local console.
	Location string `json:"location,omitempty"`

	// Method by which the user attempted to log in. Valid values include `API token`, `JWT`, `password`, and `public key`.
	Method string `json:"method,omitempty"`

	// Date and time the user logged in to the Purity//FA interface.
	StartTime int64 `json:"start_time,omitempty"`

	// Username of the Purity//FA user who triggered the user session event.
	User string `json:"user,omitempty"`

	// The user interface through which the user session event was performed. Valid values include `CLI`, `GUI`, and `REST`.
	// Read Only: true
	UserInterface string `json:"user_interface,omitempty"`
}

// Validate validates this session Oai gen all of1
func (m *SessionOAIGenAllOf1) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SessionOAIGenAllOf1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SessionOAIGenAllOf1) UnmarshalBinary(b []byte) error {
	var res SessionOAIGenAllOf1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
