// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ArraySpaceOAIGenAllOf1SpaceAllOf0 array space Oai gen all of1 space all of0
//
// swagger:model arraySpaceOaiGenAllOf1SpaceAllOf0
type ArraySpaceOAIGenAllOf1SpaceAllOf0 struct {

	// The ratio of mapped sectors within a volume versus the amount of physical space the data occupies after data compression and deduplication. The data reduction ratio does not include thin provisioning savings. For example, a data reduction ratio of 5&#58;1 means that for every 5 MB the host writes to the array, 1 MB is stored on the array's flash modules.
	DataReduction float32 `json:"data_reduction,omitempty"`

	// The physical space occupied by deduplicated data, meaning that the space is shared with other volumes and snapshots as a result of data deduplication. Measured in bytes.
	// Minimum: 0
	Shared *int64 `json:"shared,omitempty"`

	// The physical space occupied by data unique to one or more snapshots. Measured in bytes.
	// Minimum: 0
	Snapshots *int64 `json:"snapshots,omitempty"`

	// The physical space occupied by internal array metadata. Measured in bytes.
	// Minimum: 0
	System *int64 `json:"system,omitempty"`

	// The percentage of volume sectors that do not contain host-written data because the hosts have not written data to them or the sectors have been explicitly trimmed.
	// Maximum: 1
	// Minimum: 0
	ThinProvisioning *float32 `json:"thin_provisioning,omitempty"`

	// The total physical space occupied by system, shared space, volume, and snapshot data. Measured in bytes.
	// Minimum: 0
	TotalPhysical *int64 `json:"total_physical,omitempty"`

	// For a single volume, the provisioned size of the volume. For all other resources, the total provisioned size of all volumes that are connected to or are inside the resource. Represents storage capacity reported to hosts. Measured in bytes.
	// Minimum: 0
	TotalProvisioned *int64 `json:"total_provisioned,omitempty"`

	// The ratio of provisioned sectors within a volume versus the amount of physical space the data occupies after reduction via data compression and deduplication and with thin provisioning savings. Total reduction is data reduction with thin provisioning savings. For example, a total reduction ratio of 10&#58;1 means that for every 10 MB of provisioned space, 1 MB is stored on the array's flash modules.
	TotalReduction float32 `json:"total_reduction,omitempty"`

	// The unique physical space occupied by customer data. Unique physical space does not include shared space, snapshots, and internal array metadata. Measured in bytes.
	// Minimum: 0
	Unique *int64 `json:"unique,omitempty"`

	// The amount of logically written data that a volume or a snapshot references. Measured in bytes.
	// Minimum: 0
	Virtual *int64 `json:"virtual,omitempty"`
}

// Validate validates this array space Oai gen all of1 space all of0
func (m *ArraySpaceOAIGenAllOf1SpaceAllOf0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateShared(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSnapshots(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSystem(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateThinProvisioning(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalPhysical(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTotalProvisioned(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUnique(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVirtual(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ArraySpaceOAIGenAllOf1SpaceAllOf0) validateShared(formats strfmt.Registry) error {

	if swag.IsZero(m.Shared) { // not required
		return nil
	}

	if err := validate.MinimumInt("shared", "body", int64(*m.Shared), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *ArraySpaceOAIGenAllOf1SpaceAllOf0) validateSnapshots(formats strfmt.Registry) error {

	if swag.IsZero(m.Snapshots) { // not required
		return nil
	}

	if err := validate.MinimumInt("snapshots", "body", int64(*m.Snapshots), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *ArraySpaceOAIGenAllOf1SpaceAllOf0) validateSystem(formats strfmt.Registry) error {

	if swag.IsZero(m.System) { // not required
		return nil
	}

	if err := validate.MinimumInt("system", "body", int64(*m.System), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *ArraySpaceOAIGenAllOf1SpaceAllOf0) validateThinProvisioning(formats strfmt.Registry) error {

	if swag.IsZero(m.ThinProvisioning) { // not required
		return nil
	}

	if err := validate.Minimum("thin_provisioning", "body", float64(*m.ThinProvisioning), 0, false); err != nil {
		return err
	}

	if err := validate.Maximum("thin_provisioning", "body", float64(*m.ThinProvisioning), 1, false); err != nil {
		return err
	}

	return nil
}

func (m *ArraySpaceOAIGenAllOf1SpaceAllOf0) validateTotalPhysical(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalPhysical) { // not required
		return nil
	}

	if err := validate.MinimumInt("total_physical", "body", int64(*m.TotalPhysical), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *ArraySpaceOAIGenAllOf1SpaceAllOf0) validateTotalProvisioned(formats strfmt.Registry) error {

	if swag.IsZero(m.TotalProvisioned) { // not required
		return nil
	}

	if err := validate.MinimumInt("total_provisioned", "body", int64(*m.TotalProvisioned), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *ArraySpaceOAIGenAllOf1SpaceAllOf0) validateUnique(formats strfmt.Registry) error {

	if swag.IsZero(m.Unique) { // not required
		return nil
	}

	if err := validate.MinimumInt("unique", "body", int64(*m.Unique), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *ArraySpaceOAIGenAllOf1SpaceAllOf0) validateVirtual(formats strfmt.Registry) error {

	if swag.IsZero(m.Virtual) { // not required
		return nil
	}

	if err := validate.MinimumInt("virtual", "body", int64(*m.Virtual), 0, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ArraySpaceOAIGenAllOf1SpaceAllOf0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ArraySpaceOAIGenAllOf1SpaceAllOf0) UnmarshalBinary(b []byte) error {
	var res ArraySpaceOAIGenAllOf1SpaceAllOf0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
