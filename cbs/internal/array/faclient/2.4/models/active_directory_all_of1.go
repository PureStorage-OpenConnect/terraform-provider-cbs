// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ActiveDirectoryAllOf1 active directory all of1
//
// swagger:model activeDirectoryAllOf1
type ActiveDirectoryAllOf1 struct {

	// The name of the computer account in the Active Directory domain.
	// Read Only: true
	ComputerName string `json:"computer_name,omitempty"`

	// A list of directory servers used for lookups related to user authorization. Servers must be specified in FQDN format. All specified servers must be registered to the domain appropriately in the configured DNS of the array and are only communicated with over the secure LDAP (LDAPS) protocol. If this field is `null`, the servers are resolved for the domain in DNS.
	// Read Only: true
	DirectoryServers []string `json:"directory_servers"`

	// The Active Directory domain joined.
	// Read Only: true
	Domain string `json:"domain,omitempty"`

	// A list of key distribution servers to use for Kerberos protocol. Servers must be specified in FQDN format. All specified servers must be registered to the domain appropriately in the configured DNS of the array. If this field is `null`, the servers are resolved for the domain in DNS.
	// Read Only: true
	KerberosServers []string `json:"kerberos_servers"`
}

// Validate validates this active directory all of1
func (m *ActiveDirectoryAllOf1) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ActiveDirectoryAllOf1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ActiveDirectoryAllOf1) UnmarshalBinary(b []byte) error {
	var res ActiveDirectoryAllOf1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
