// Code generated by go-swagger; DO NOT EDIT.

package directory_snapshots

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.dev.purestorage.com/FlashArray/terraform-provider-cbs/cbs/internal/faclient/2.4/models"
)

// NewPatchAPI24DirectorySnapshotsParams creates a new PatchAPI24DirectorySnapshotsParams object
// with the default values initialized.
func NewPatchAPI24DirectorySnapshotsParams() *PatchAPI24DirectorySnapshotsParams {
	var ()
	return &PatchAPI24DirectorySnapshotsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchAPI24DirectorySnapshotsParamsWithTimeout creates a new PatchAPI24DirectorySnapshotsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchAPI24DirectorySnapshotsParamsWithTimeout(timeout time.Duration) *PatchAPI24DirectorySnapshotsParams {
	var ()
	return &PatchAPI24DirectorySnapshotsParams{

		timeout: timeout,
	}
}

// NewPatchAPI24DirectorySnapshotsParamsWithContext creates a new PatchAPI24DirectorySnapshotsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchAPI24DirectorySnapshotsParamsWithContext(ctx context.Context) *PatchAPI24DirectorySnapshotsParams {
	var ()
	return &PatchAPI24DirectorySnapshotsParams{

		Context: ctx,
	}
}

// NewPatchAPI24DirectorySnapshotsParamsWithHTTPClient creates a new PatchAPI24DirectorySnapshotsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchAPI24DirectorySnapshotsParamsWithHTTPClient(client *http.Client) *PatchAPI24DirectorySnapshotsParams {
	var ()
	return &PatchAPI24DirectorySnapshotsParams{
		HTTPClient: client,
	}
}

/*PatchAPI24DirectorySnapshotsParams contains all the parameters to send to the API endpoint
for the patch API 24 directory snapshots operation typically these are written to a http.Request
*/
type PatchAPI24DirectorySnapshotsParams struct {

	/*Authorization
	  Access token (in JWT format) required to use any API endpoint (except `/oauth2`, `/login`, and `/logout`)

	*/
	Authorization *string
	/*XRequestID
	  Supplied by client during request or generated by server.

	*/
	XRequestID *string
	/*DirectorySnapshot*/
	DirectorySnapshot *models.DirectorySnapshotPatch
	/*Ids
	  Performs the operation on the unique resource IDs specified. Enter multiple resource IDs in comma-separated format. The `ids` and `names` parameters cannot be provided together.

	*/
	Ids []string
	/*Names
	  Performs the operation on the unique name specified. Enter multiple names in comma-separated format. For example, `name01,name02`.

	*/
	Names []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) WithTimeout(timeout time.Duration) *PatchAPI24DirectorySnapshotsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) WithContext(ctx context.Context) *PatchAPI24DirectorySnapshotsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) WithHTTPClient(client *http.Client) *PatchAPI24DirectorySnapshotsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) WithAuthorization(authorization *string) *PatchAPI24DirectorySnapshotsParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithXRequestID adds the xRequestID to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) WithXRequestID(xRequestID *string) *PatchAPI24DirectorySnapshotsParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithDirectorySnapshot adds the directorySnapshot to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) WithDirectorySnapshot(directorySnapshot *models.DirectorySnapshotPatch) *PatchAPI24DirectorySnapshotsParams {
	o.SetDirectorySnapshot(directorySnapshot)
	return o
}

// SetDirectorySnapshot adds the directorySnapshot to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) SetDirectorySnapshot(directorySnapshot *models.DirectorySnapshotPatch) {
	o.DirectorySnapshot = directorySnapshot
}

// WithIds adds the ids to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) WithIds(ids []string) *PatchAPI24DirectorySnapshotsParams {
	o.SetIds(ids)
	return o
}

// SetIds adds the ids to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) SetIds(ids []string) {
	o.Ids = ids
}

// WithNames adds the names to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) WithNames(names []string) *PatchAPI24DirectorySnapshotsParams {
	o.SetNames(names)
	return o
}

// SetNames adds the names to the patch API 24 directory snapshots params
func (o *PatchAPI24DirectorySnapshotsParams) SetNames(names []string) {
	o.Names = names
}

// WriteToRequest writes these params to a swagger request
func (o *PatchAPI24DirectorySnapshotsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param Authorization
		if err := r.SetHeaderParam("Authorization", *o.Authorization); err != nil {
			return err
		}

	}

	if o.XRequestID != nil {

		// header param X-Request-ID
		if err := r.SetHeaderParam("X-Request-ID", *o.XRequestID); err != nil {
			return err
		}

	}

	if o.DirectorySnapshot != nil {
		if err := r.SetBodyParam(o.DirectorySnapshot); err != nil {
			return err
		}
	}

	valuesIds := o.Ids

	joinedIds := swag.JoinByFormat(valuesIds, "csv")
	// query array param ids
	if err := r.SetQueryParam("ids", joinedIds...); err != nil {
		return err
	}

	valuesNames := o.Names

	joinedNames := swag.JoinByFormat(valuesNames, "csv")
	// query array param names
	if err := r.SetQueryParam("names", joinedNames...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
