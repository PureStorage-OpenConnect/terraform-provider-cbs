// Code generated by go-swagger; DO NOT EDIT.

package directory_snapshots

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new directory snapshots API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for directory snapshots API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24DirectorySnapshots(params *DeleteAPI24DirectorySnapshotsParams) (*DeleteApi24DirectorySnapshotsOK, error)

	GetAPI24DirectorySnapshots(params *GetAPI24DirectorySnapshotsParams) (*GetApi24DirectorySnapshotsOK, error)

	PatchAPI24DirectorySnapshots(params *PatchAPI24DirectorySnapshotsParams) (*PatchApi24DirectorySnapshotsOK, error)

	PostAPI24DirectorySnapshots(params *PostAPI24DirectorySnapshotsParams) (*PostApi24DirectorySnapshotsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24DirectorySnapshots deletes directory snapshot

  Deletes a directory snapshot that has been destroyed and is pending eradication. Eradicated directory snapshots cannot be recovered. Directory snapshots are destroyed by using the PATCH method. The `ids` or `names` parameter is required, but cannot be set together.
*/
func (a *Client) DeleteAPI24DirectorySnapshots(params *DeleteAPI24DirectorySnapshotsParams) (*DeleteApi24DirectorySnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24DirectorySnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24DirectorySnapshots",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/directory-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24DirectorySnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24DirectorySnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24DirectorySnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24DirectorySnapshots lists directory snapshots

  Displays a list of directory snapshots, including those pending eradication.
*/
func (a *Client) GetAPI24DirectorySnapshots(params *GetAPI24DirectorySnapshotsParams) (*GetApi24DirectorySnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24DirectorySnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24DirectorySnapshots",
		Method:             "GET",
		PathPattern:        "/api/2.4/directory-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24DirectorySnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24DirectorySnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24DirectorySnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24DirectorySnapshots modifies directory snapshot

  Modifies a directory snapshot. You can destroy, recover, or update the policy or time remaining of a directory snapshot. To destroy a directory snapshot, set `destroyed=true`. To recover a directory snapshot that has been destroyed and is pending eradication, set `destroyed=false`. The `ids` or `names` parameter is required, but cannot be set together.
*/
func (a *Client) PatchAPI24DirectorySnapshots(params *PatchAPI24DirectorySnapshotsParams) (*PatchApi24DirectorySnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24DirectorySnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24DirectorySnapshots",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/directory-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24DirectorySnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24DirectorySnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24DirectorySnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24DirectorySnapshots creates directory snapshot

  Creates a snapshot of the contents of a directory. The `source_ids` or `source_names` parameter is required, but cannot be set together.
*/
func (a *Client) PostAPI24DirectorySnapshots(params *PostAPI24DirectorySnapshotsParams) (*PostApi24DirectorySnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24DirectorySnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24DirectorySnapshots",
		Method:             "POST",
		PathPattern:        "/api/2.4/directory-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24DirectorySnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24DirectorySnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24DirectorySnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
