// Code generated by go-swagger; DO NOT EDIT.

package volumes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new volumes API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for volumes API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24Volumes(params *DeleteAPI24VolumesParams) (*DeleteApi24VolumesOK, error)

	DeleteAPI24VolumesProtectionGroups(params *DeleteAPI24VolumesProtectionGroupsParams) (*DeleteApi24VolumesProtectionGroupsOK, error)

	DeleteAPI24VolumesTags(params *DeleteAPI24VolumesTagsParams) (*DeleteApi24VolumesTagsOK, error)

	GetAPI24Volumes(params *GetAPI24VolumesParams) (*GetApi24VolumesOK, error)

	GetAPI24VolumesPerformance(params *GetAPI24VolumesPerformanceParams) (*GetApi24VolumesPerformanceOK, error)

	GetAPI24VolumesPerformanceByArray(params *GetAPI24VolumesPerformanceByArrayParams) (*GetApi24VolumesPerformanceByArrayOK, error)

	GetAPI24VolumesProtectionGroups(params *GetAPI24VolumesProtectionGroupsParams) (*GetApi24VolumesProtectionGroupsOK, error)

	GetAPI24VolumesSpace(params *GetAPI24VolumesSpaceParams) (*GetApi24VolumesSpaceOK, error)

	GetAPI24VolumesTags(params *GetAPI24VolumesTagsParams) (*GetApi24VolumesTagsOK, error)

	GetAPI24VolumesVolumeGroups(params *GetAPI24VolumesVolumeGroupsParams) (*GetApi24VolumesVolumeGroupsOK, error)

	PatchAPI24Volumes(params *PatchAPI24VolumesParams) (*PatchApi24VolumesOK, error)

	PostAPI24Volumes(params *PostAPI24VolumesParams) (*PostApi24VolumesOK, error)

	PostAPI24VolumesProtectionGroups(params *PostAPI24VolumesProtectionGroupsParams) (*PostApi24VolumesProtectionGroupsOK, error)

	PutAPI24VolumesTagsBatch(params *PutAPI24VolumesTagsBatchParams) (*PutApi24VolumesTagsBatchOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24Volumes deletes a volume

  Deletes a volume that has been destroyed and is pending eradication. Eradicated volumes cannot be recovered. Volumes are destroyed using the `PATCH` method. The `ids` or `names` parameter is required, but they cannot be set together.
*/
func (a *Client) DeleteAPI24Volumes(params *DeleteAPI24VolumesParams) (*DeleteApi24VolumesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24VolumesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24Volumes",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/volumes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24VolumesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24VolumesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24Volumes: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24VolumesProtectionGroups removes a volume from a protection group

  Removes a volume member from a protection group. After the member has been removed, it is no longer protected by the group. Any protection group snapshots that were taken before the member was removed will not be affected. Removing a member from a protection group does not delete the member from the array, and the member can be added back to the protection group at any time. The `group_names` parameter represents the name of the protection group, and the `member_names` parameter represents the name of the volume. The `group_names` and `member_names` parameters are required and must be set together.
*/
func (a *Client) DeleteAPI24VolumesProtectionGroups(params *DeleteAPI24VolumesProtectionGroupsParams) (*DeleteApi24VolumesProtectionGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24VolumesProtectionGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24VolumesProtectionGroups",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/volumes/protection-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24VolumesProtectionGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24VolumesProtectionGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24VolumesProtectionGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24VolumesTags deletes tags

  Deletes specified tags on volume objects.
*/
func (a *Client) DeleteAPI24VolumesTags(params *DeleteAPI24VolumesTagsParams) (*DeleteApi24VolumesTagsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24VolumesTagsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24VolumesTags",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/volumes/tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24VolumesTagsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24VolumesTagsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24VolumesTags: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24Volumes lists volumes

  Displays a list of volumes, including those pending eradication.
*/
func (a *Client) GetAPI24Volumes(params *GetAPI24VolumesParams) (*GetApi24VolumesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24VolumesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24Volumes",
		Method:             "GET",
		PathPattern:        "/api/2.4/volumes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24VolumesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24VolumesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24Volumes: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24VolumesPerformance lists volume performance data

  Returns real-time and historical performance data, real-time latency data, and average I/O sizes for each volume and and as a total of all volumes across the entire array.
*/
func (a *Client) GetAPI24VolumesPerformance(params *GetAPI24VolumesPerformanceParams) (*GetApi24VolumesPerformanceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24VolumesPerformanceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24VolumesPerformance",
		Method:             "GET",
		PathPattern:        "/api/2.4/volumes/performance",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24VolumesPerformanceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24VolumesPerformanceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24VolumesPerformance: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24VolumesPerformanceByArray lists volume performance data by array

  Return real-time and historical performance data, real-time latency data, and average I/O size data. The data returned is for each volume on the current array and for each volume on any remote arrays that are visible to the current array. The data is grouped by individual volumes and as a total across all volumes on each array.
*/
func (a *Client) GetAPI24VolumesPerformanceByArray(params *GetAPI24VolumesPerformanceByArrayParams) (*GetApi24VolumesPerformanceByArrayOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24VolumesPerformanceByArrayParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24VolumesPerformanceByArray",
		Method:             "GET",
		PathPattern:        "/api/2.4/volumes/performance/by-array",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24VolumesPerformanceByArrayReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24VolumesPerformanceByArrayOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24VolumesPerformanceByArray: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24VolumesProtectionGroups lists volumes that are members of protection groups

  Returns a list of volume members that belong to one or more protection groups.
*/
func (a *Client) GetAPI24VolumesProtectionGroups(params *GetAPI24VolumesProtectionGroupsParams) (*GetApi24VolumesProtectionGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24VolumesProtectionGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24VolumesProtectionGroups",
		Method:             "GET",
		PathPattern:        "/api/2.4/volumes/protection-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24VolumesProtectionGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24VolumesProtectionGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24VolumesProtectionGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24VolumesSpace lists volume space information

  Returns the provisioned (virtual) size and physical storage consumption data for each volume.
*/
func (a *Client) GetAPI24VolumesSpace(params *GetAPI24VolumesSpaceParams) (*GetApi24VolumesSpaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24VolumesSpaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24VolumesSpace",
		Method:             "GET",
		PathPattern:        "/api/2.4/volumes/space",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24VolumesSpaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24VolumesSpaceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24VolumesSpace: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24VolumesTags lists tags

  Displays the list of tags on volume objects.
*/
func (a *Client) GetAPI24VolumesTags(params *GetAPI24VolumesTagsParams) (*GetApi24VolumesTagsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24VolumesTagsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24VolumesTags",
		Method:             "GET",
		PathPattern:        "/api/2.4/volumes/tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24VolumesTagsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24VolumesTagsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24VolumesTags: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24VolumesVolumeGroups lists volumes that are in volume groups

  Returns a list of volumes that are in a volume group.
*/
func (a *Client) GetAPI24VolumesVolumeGroups(params *GetAPI24VolumesVolumeGroupsParams) (*GetApi24VolumesVolumeGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24VolumesVolumeGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24VolumesVolumeGroups",
		Method:             "GET",
		PathPattern:        "/api/2.4/volumes/volume-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24VolumesVolumeGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24VolumesVolumeGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24VolumesVolumeGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24Volumes updates a volume

  Updates a volume, renaming, destroying, or resizing it. To rename a volume, set `name` to the new name. To destroy a volume, set `destroyed=true`. To recover a volume that has been destroyed and is pending eradication, set `destroyed=false`. Sets the bandwidth and IOPs limits of a volume through the respective `bandwidth_limit` and `iops_limit` parameter. Moves the volume into a pod or volume group through the respective `pod` or `volume_group` parameter. The `ids` or `names` parameter is required, but cannot be set together.
*/
func (a *Client) PatchAPI24Volumes(params *PatchAPI24VolumesParams) (*PatchApi24VolumesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24VolumesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24Volumes",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/volumes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24VolumesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24VolumesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24Volumes: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24Volumes creates a volume

  Creates one or more virtual storage volumes of the specified size. If `provisioned` is not specified, the size of the new volume defaults to 1 MB in size. The `names` query parameter is required.
*/
func (a *Client) PostAPI24Volumes(params *PostAPI24VolumesParams) (*PostApi24VolumesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24VolumesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24Volumes",
		Method:             "POST",
		PathPattern:        "/api/2.4/volumes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24VolumesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24VolumesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24Volumes: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24VolumesProtectionGroups adds a volume to a protection group

  Adds a volume member to a protection group. Members that are already in the protection group are not affected. For asynchronous replication, only members of the same type can belong to a protection group. The `group_names` parameter represents the name of the protection group, and the `member_names` parameter represents the name of the volume. The `group_names` and `member_names` parameters are required and must be set together.
*/
func (a *Client) PostAPI24VolumesProtectionGroups(params *PostAPI24VolumesProtectionGroupsParams) (*PostApi24VolumesProtectionGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24VolumesProtectionGroupsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24VolumesProtectionGroups",
		Method:             "POST",
		PathPattern:        "/api/2.4/volumes/protection-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24VolumesProtectionGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24VolumesProtectionGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24VolumesProtectionGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutAPI24VolumesTagsBatch updates tags

  Updates tags.
*/
func (a *Client) PutAPI24VolumesTagsBatch(params *PutAPI24VolumesTagsBatchParams) (*PutApi24VolumesTagsBatchOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutAPI24VolumesTagsBatchParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PutAPI24VolumesTagsBatch",
		Method:             "PUT",
		PathPattern:        "/api/2.4/volumes/tags/batch",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PutAPI24VolumesTagsBatchReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutApi24VolumesTagsBatchOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutAPI24VolumesTagsBatch: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
