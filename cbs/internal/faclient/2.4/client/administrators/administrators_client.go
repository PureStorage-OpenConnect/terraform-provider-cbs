// Code generated by go-swagger; DO NOT EDIT.

package administrators

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new administrators API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for administrators API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24Admins(params *DeleteAPI24AdminsParams) (*DeleteApi24AdminsOK, error)

	DeleteAPI24AdminsAPITokens(params *DeleteAPI24AdminsAPITokensParams) (*DeleteApi24AdminsAPITokensOK, error)

	DeleteAPI24AdminsCache(params *DeleteAPI24AdminsCacheParams) (*DeleteApi24AdminsCacheOK, error)

	GetAPI24Admins(params *GetAPI24AdminsParams) (*GetApi24AdminsOK, error)

	GetAPI24AdminsAPITokens(params *GetAPI24AdminsAPITokensParams) (*GetApi24AdminsAPITokensOK, error)

	GetAPI24AdminsCache(params *GetAPI24AdminsCacheParams) (*GetApi24AdminsCacheOK, error)

	GetAPI24AdminsSettings(params *GetAPI24AdminsSettingsParams) (*GetApi24AdminsSettingsOK, error)

	PatchAPI24Admins(params *PatchAPI24AdminsParams) (*PatchApi24AdminsOK, error)

	PatchAPI24AdminsSettings(params *PatchAPI24AdminsSettingsParams) (*PatchApi24AdminsSettingsOK, error)

	PostAPI24Admins(params *PostAPI24AdminsParams) (*PostApi24AdminsOK, error)

	PostAPI24AdminsAPITokens(params *PostAPI24AdminsAPITokensParams) (*PostApi24AdminsAPITokensOK, error)

	PutAPI24AdminsCache(params *PutAPI24AdminsCacheParams) (*PutApi24AdminsCacheOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24Admins deletes an administrator

  Deletes the specified administrator.
*/
func (a *Client) DeleteAPI24Admins(params *DeleteAPI24AdminsParams) (*DeleteApi24AdminsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24AdminsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24Admins",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/admins",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24AdminsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24AdminsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24Admins: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24AdminsAPITokens deletes API tokens

  Deletes the API tokens of the specified administrators.
*/
func (a *Client) DeleteAPI24AdminsAPITokens(params *DeleteAPI24AdminsAPITokensParams) (*DeleteApi24AdminsAPITokensOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24AdminsAPITokensParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24AdminsAPITokens",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/admins/api-tokens",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24AdminsAPITokensReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24AdminsAPITokensOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24AdminsAPITokens: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24AdminsCache deletes cache entries

  Deletes all entries from the administrator cache.
*/
func (a *Client) DeleteAPI24AdminsCache(params *DeleteAPI24AdminsCacheParams) (*DeleteApi24AdminsCacheOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24AdminsCacheParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24AdminsCache",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/admins/cache",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24AdminsCacheReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24AdminsCacheOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24AdminsCache: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24Admins lists administrators

  Displays a list of administrators.
*/
func (a *Client) GetAPI24Admins(params *GetAPI24AdminsParams) (*GetApi24AdminsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24AdminsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24Admins",
		Method:             "GET",
		PathPattern:        "/api/2.4/admins",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24AdminsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24AdminsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24Admins: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24AdminsAPITokens lists API tokens

  Displays API tokens for the specified administrators.
*/
func (a *Client) GetAPI24AdminsAPITokens(params *GetAPI24AdminsAPITokensParams) (*GetApi24AdminsAPITokensOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24AdminsAPITokensParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24AdminsAPITokens",
		Method:             "GET",
		PathPattern:        "/api/2.4/admins/api-tokens",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24AdminsAPITokensReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24AdminsAPITokensOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24AdminsAPITokens: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24AdminsCache lists administrator cache entries

  Displays entries in the administrator cache.
*/
func (a *Client) GetAPI24AdminsCache(params *GetAPI24AdminsCacheParams) (*GetApi24AdminsCacheOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24AdminsCacheParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24AdminsCache",
		Method:             "GET",
		PathPattern:        "/api/2.4/admins/cache",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24AdminsCacheReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24AdminsCacheOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24AdminsCache: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24AdminsSettings lists administrator settings

  Displays the global administrator settings for the array.
*/
func (a *Client) GetAPI24AdminsSettings(params *GetAPI24AdminsSettingsParams) (*GetApi24AdminsSettingsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24AdminsSettingsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24AdminsSettings",
		Method:             "GET",
		PathPattern:        "/api/2.4/admins/settings",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24AdminsSettingsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24AdminsSettingsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24AdminsSettings: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24Admins modifies an administrator

  Modifies properties for the specified administrator.
*/
func (a *Client) PatchAPI24Admins(params *PatchAPI24AdminsParams) (*PatchApi24AdminsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24AdminsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24Admins",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/admins",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24AdminsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24AdminsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24Admins: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24AdminsSettings modifies administrator settings

  Modifies the global administrator settings for the array.
*/
func (a *Client) PatchAPI24AdminsSettings(params *PatchAPI24AdminsSettingsParams) (*PatchApi24AdminsSettingsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24AdminsSettingsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24AdminsSettings",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/admins/settings",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24AdminsSettingsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24AdminsSettingsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24AdminsSettings: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24Admins creates an administrator

  Creates an administrator.
*/
func (a *Client) PostAPI24Admins(params *PostAPI24AdminsParams) (*PostApi24AdminsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24AdminsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24Admins",
		Method:             "POST",
		PathPattern:        "/api/2.4/admins",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24AdminsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24AdminsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24Admins: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24AdminsAPITokens creates API tokens

  Creates API tokens for the specified administrators.
*/
func (a *Client) PostAPI24AdminsAPITokens(params *PostAPI24AdminsAPITokensParams) (*PostApi24AdminsAPITokensOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24AdminsAPITokensParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24AdminsAPITokens",
		Method:             "POST",
		PathPattern:        "/api/2.4/admins/api-tokens",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24AdminsAPITokensReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24AdminsAPITokensOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24AdminsAPITokens: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutAPI24AdminsCache updates or refresh entries in the administrator cache

  Updates entries in the cache for administrators who currently do not have a cache entry, otherwise refreshes the existing entry.
*/
func (a *Client) PutAPI24AdminsCache(params *PutAPI24AdminsCacheParams) (*PutApi24AdminsCacheOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutAPI24AdminsCacheParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PutAPI24AdminsCache",
		Method:             "PUT",
		PathPattern:        "/api/2.4/admins/cache",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PutAPI24AdminsCacheReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutApi24AdminsCacheOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutAPI24AdminsCache: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
