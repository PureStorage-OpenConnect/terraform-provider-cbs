// Code generated by go-swagger; DO NOT EDIT.

package kmip

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new kmip API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for kmip API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24KMIP(params *DeleteAPI24KMIPParams) (*DeleteApi24KMIPOK, error)

	GetAPI24KMIP(params *GetAPI24KMIPParams) (*GetApi24KMIPOK, error)

	GetAPI24KMIPTest(params *GetAPI24KMIPTestParams) (*GetApi24KMIPTestOK, error)

	PatchAPI24KMIP(params *PatchAPI24KMIPParams) (*PatchApi24KMIPOK, error)

	PostAPI24KMIP(params *PostAPI24KMIPParams) (*PostApi24KMIPOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24KMIP deletes KMIP server object

  Deletes KMIP server objects.
*/
func (a *Client) DeleteAPI24KMIP(params *DeleteAPI24KMIPParams) (*DeleteApi24KMIPOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24KMIPParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24KMIP",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/kmip",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24KMIPReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24KMIPOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24KMIP: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24KMIP lists KMIP server objects

  Displays the list of KMIP server objects.
*/
func (a *Client) GetAPI24KMIP(params *GetAPI24KMIPParams) (*GetApi24KMIPOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24KMIPParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24KMIP",
		Method:             "GET",
		PathPattern:        "/api/2.4/kmip",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24KMIPReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24KMIPOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24KMIP: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24KMIPTest lists KMIP connection tests

  Displays communication data between a FlashArray and KMIP server.
*/
func (a *Client) GetAPI24KMIPTest(params *GetAPI24KMIPTestParams) (*GetApi24KMIPTestOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24KMIPTestParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24KMIPTest",
		Method:             "GET",
		PathPattern:        "/api/2.4/kmip/test",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24KMIPTestReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24KMIPTestOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24KMIPTest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24KMIP modifies KMIP attributes

  Modifies one or more attributes of KMIP server objects.
*/
func (a *Client) PatchAPI24KMIP(params *PatchAPI24KMIPParams) (*PatchApi24KMIPOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24KMIPParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24KMIP",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/kmip",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24KMIPReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24KMIPOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24KMIP: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24KMIP creates KMIP server object

  Creates KMIP server objects.
*/
func (a *Client) PostAPI24KMIP(params *PostAPI24KMIPParams) (*PostApi24KMIPOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24KMIPParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24KMIP",
		Method:             "POST",
		PathPattern:        "/api/2.4/kmip",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24KMIPReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24KMIPOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24KMIP: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
