// Code generated by go-swagger; DO NOT EDIT.

package arrays

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new arrays API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for arrays API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24Arrays(params *DeleteAPI24ArraysParams) (*DeleteApi24ArraysOK, error)

	DeleteAPI24ArraysFactoryResetToken(params *DeleteAPI24ArraysFactoryResetTokenParams) (*DeleteApi24ArraysFactoryResetTokenOK, error)

	GetAPI24Arrays(params *GetAPI24ArraysParams) (*GetApi24ArraysOK, error)

	GetAPI24ArraysEula(params *GetAPI24ArraysEulaParams) (*GetApi24ArraysEulaOK, error)

	GetAPI24ArraysFactoryResetToken(params *GetAPI24ArraysFactoryResetTokenParams) (*GetApi24ArraysFactoryResetTokenOK, error)

	GetAPI24ArraysNtpTest(params *GetAPI24ArraysNtpTestParams) (*GetApi24ArraysNtpTestOK, error)

	GetAPI24ArraysPerformance(params *GetAPI24ArraysPerformanceParams) (*GetApi24ArraysPerformanceOK, error)

	GetAPI24ArraysSpace(params *GetAPI24ArraysSpaceParams) (*GetApi24ArraysSpaceOK, error)

	PatchAPI24Arrays(params *PatchAPI24ArraysParams) (*PatchApi24ArraysOK, error)

	PatchAPI24ArraysEula(params *PatchAPI24ArraysEulaParams) (*PatchApi24ArraysEulaOK, error)

	PostAPI24ArraysFactoryResetToken(params *PostAPI24ArraysFactoryResetTokenParams) (*PostApi24ArraysFactoryResetTokenOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24Arrays deletes an array

  Deletes an array. For physical appliances, deleting an array restores the hardware to factory settings. This entails deleting all data, metadata, configuration, and logs; the array returns to the state it was in prior to any configuration changes being made. If the hardware is reused, it must be as a different array with a new ID. For virtual appliances, deleting an array puts it into an unusable state. Virtual resources (e.g., virtual machines) can later be freed, which deletes any remaining data, metadata, configuration, and logs. Prior to factory reset, an array must be manually prepared (e.g., all volumes and snapshots must be eradicated) and a factory reset token must be created.
*/
func (a *Client) DeleteAPI24Arrays(params *DeleteAPI24ArraysParams) (*DeleteApi24ArraysOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24ArraysParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24Arrays",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/arrays",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24ArraysReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24ArraysOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24Arrays: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24ArraysFactoryResetToken deletes a factory reset token

  Deletes an existing token that could be used to perform a factory reset on the array.
*/
func (a *Client) DeleteAPI24ArraysFactoryResetToken(params *DeleteAPI24ArraysFactoryResetTokenParams) (*DeleteApi24ArraysFactoryResetTokenOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24ArraysFactoryResetTokenParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24ArraysFactoryResetToken",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/arrays/factory-reset-token",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24ArraysFactoryResetTokenReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24ArraysFactoryResetTokenOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24ArraysFactoryResetToken: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24Arrays lists arrays

  Displays a list of connection paths to each of the connected arrays.
*/
func (a *Client) GetAPI24Arrays(params *GetAPI24ArraysParams) (*GetApi24ArraysOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24ArraysParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24Arrays",
		Method:             "GET",
		PathPattern:        "/api/2.4/arrays",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24ArraysReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24ArraysOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24Arrays: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24ArraysEula lists end user agreement and signature

  Displays the End User Agreement and signature.
*/
func (a *Client) GetAPI24ArraysEula(params *GetAPI24ArraysEulaParams) (*GetApi24ArraysEulaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24ArraysEulaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24ArraysEula",
		Method:             "GET",
		PathPattern:        "/api/2.4/arrays/eula",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24ArraysEulaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24ArraysEulaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24ArraysEula: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24ArraysFactoryResetToken lists factory reset tokens

  Displays a list of tokens used to perform a factory reset on the array.
*/
func (a *Client) GetAPI24ArraysFactoryResetToken(params *GetAPI24ArraysFactoryResetTokenParams) (*GetApi24ArraysFactoryResetTokenOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24ArraysFactoryResetTokenParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24ArraysFactoryResetToken",
		Method:             "GET",
		PathPattern:        "/api/2.4/arrays/factory-reset-token",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24ArraysFactoryResetTokenReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24ArraysFactoryResetTokenOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24ArraysFactoryResetToken: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24ArraysNtpTest lists n t p test results

  Displays test results for configured NTP servers.
*/
func (a *Client) GetAPI24ArraysNtpTest(params *GetAPI24ArraysNtpTestParams) (*GetApi24ArraysNtpTestOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24ArraysNtpTestParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24ArraysNtpTest",
		Method:             "GET",
		PathPattern:        "/api/2.4/arrays/ntp-test",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24ArraysNtpTestReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24ArraysNtpTestOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24ArraysNtpTest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24ArraysPerformance lists array front end performance data

  Displays real-time and historical front-end performance data at the array level including latency, bandwidth, IOPS, average I/O size, and queue depth.
*/
func (a *Client) GetAPI24ArraysPerformance(params *GetAPI24ArraysPerformanceParams) (*GetApi24ArraysPerformanceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24ArraysPerformanceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24ArraysPerformance",
		Method:             "GET",
		PathPattern:        "/api/2.4/arrays/performance",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24ArraysPerformanceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24ArraysPerformanceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24ArraysPerformance: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24ArraysSpace lists array space information

  Displays real-time and historical array space information including unique volume and snapshot space, shared space, data reduction, provisioned capacity, usable capacity, and parity.
*/
func (a *Client) GetAPI24ArraysSpace(params *GetAPI24ArraysSpaceParams) (*GetApi24ArraysSpaceOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24ArraysSpaceParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24ArraysSpace",
		Method:             "GET",
		PathPattern:        "/api/2.4/arrays/space",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24ArraysSpaceReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24ArraysSpaceOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24ArraysSpace: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24Arrays modifies an array

  Modifies general array properties such as the array name, login banner, idle timeout for management sessions, and NTP servers.
*/
func (a *Client) PatchAPI24Arrays(params *PatchAPI24ArraysParams) (*PatchApi24ArraysOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24ArraysParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24Arrays",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/arrays",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24ArraysReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24ArraysOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24Arrays: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24ArraysEula modifies signature on the end user agreement

  Modifies the signature on the End User Agreement.
*/
func (a *Client) PatchAPI24ArraysEula(params *PatchAPI24ArraysEulaParams) (*PatchApi24ArraysEulaOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24ArraysEulaParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24ArraysEula",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/arrays/eula",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24ArraysEulaReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24ArraysEulaOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24ArraysEula: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24ArraysFactoryResetToken creates a factory reset token

  Creates a token that can be used to perform a factory reset on the array. Factory reset tokens can only be created after the array has been prepared for reset (e.g., all volumes and snapshots must first be eradicated). After a token has been created, operations that would take the array out of the prepared state are disabled (e.g., creating volumes) until all tokens have been deleted.
*/
func (a *Client) PostAPI24ArraysFactoryResetToken(params *PostAPI24ArraysFactoryResetTokenParams) (*PostApi24ArraysFactoryResetTokenOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24ArraysFactoryResetTokenParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24ArraysFactoryResetToken",
		Method:             "POST",
		PathPattern:        "/api/2.4/arrays/factory-reset-token",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24ArraysFactoryResetTokenReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24ArraysFactoryResetTokenOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24ArraysFactoryResetToken: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
