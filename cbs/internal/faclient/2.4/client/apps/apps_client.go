// Code generated by go-swagger; DO NOT EDIT.

package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new apps API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for apps API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetAPI24Apps(params *GetAPI24AppsParams) (*GetApi24AppsOK, error)

	GetAPI24AppsNodes(params *GetAPI24AppsNodesParams) (*GetApi24AppsNodesOK, error)

	PatchAPI24Apps(params *PatchAPI24AppsParams) (*PatchApi24AppsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetAPI24Apps lists apps

  Displays a list of installed apps.
*/
func (a *Client) GetAPI24Apps(params *GetAPI24AppsParams) (*GetApi24AppsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24AppsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24Apps",
		Method:             "GET",
		PathPattern:        "/api/2.4/apps",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24AppsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24AppsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24Apps: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24AppsNodes lists app nodes

  Displays a list of installed apps and their nodes.
*/
func (a *Client) GetAPI24AppsNodes(params *GetAPI24AppsNodesParams) (*GetApi24AppsNodesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24AppsNodesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24AppsNodes",
		Method:             "GET",
		PathPattern:        "/api/2.4/apps/nodes",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24AppsNodesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24AppsNodesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24AppsNodes: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24Apps modifies app

  Modifies an installed app or modifies Virtual Network Computing (VNC) access for apps that are being patched.
*/
func (a *Client) PatchAPI24Apps(params *PatchAPI24AppsParams) (*PatchApi24AppsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24AppsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24Apps",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/apps",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24AppsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24AppsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24Apps: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
