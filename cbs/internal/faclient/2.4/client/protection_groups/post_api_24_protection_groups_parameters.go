// Code generated by go-swagger; DO NOT EDIT.

package protection_groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPostAPI24ProtectionGroupsParams creates a new PostAPI24ProtectionGroupsParams object
// with the default values initialized.
func NewPostAPI24ProtectionGroupsParams() *PostAPI24ProtectionGroupsParams {
	var ()
	return &PostAPI24ProtectionGroupsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAPI24ProtectionGroupsParamsWithTimeout creates a new PostAPI24ProtectionGroupsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAPI24ProtectionGroupsParamsWithTimeout(timeout time.Duration) *PostAPI24ProtectionGroupsParams {
	var ()
	return &PostAPI24ProtectionGroupsParams{

		timeout: timeout,
	}
}

// NewPostAPI24ProtectionGroupsParamsWithContext creates a new PostAPI24ProtectionGroupsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAPI24ProtectionGroupsParamsWithContext(ctx context.Context) *PostAPI24ProtectionGroupsParams {
	var ()
	return &PostAPI24ProtectionGroupsParams{

		Context: ctx,
	}
}

// NewPostAPI24ProtectionGroupsParamsWithHTTPClient creates a new PostAPI24ProtectionGroupsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAPI24ProtectionGroupsParamsWithHTTPClient(client *http.Client) *PostAPI24ProtectionGroupsParams {
	var ()
	return &PostAPI24ProtectionGroupsParams{
		HTTPClient: client,
	}
}

/*PostAPI24ProtectionGroupsParams contains all the parameters to send to the API endpoint
for the post API 24 protection groups operation typically these are written to a http.Request
*/
type PostAPI24ProtectionGroupsParams struct {

	/*Authorization
	  Access token (in JWT format) required to use any API endpoint (except `/oauth2`, `/login`, and `/logout`)

	*/
	Authorization *string
	/*XRequestID
	  Supplied by client during request or generated by server.

	*/
	XRequestID *string
	/*Names
	  Performs the operation on the unique name specified. Enter multiple names in comma-separated format. For example, `name01,name02`.

	*/
	Names []string
	/*Overwrite
	  If set to `true`, overwrites an existing volume during a volume copy operation. If set to `false` or not set at all and the target name is an existing volume, the volume copy operation fails. Required if the `source: id` or `source: name` body parameter is set and the source overwrites an existing volume during the volume copy operation.

	*/
	Overwrite *bool
	/*SourceNames
	  The name of the protection group or protection group snapshot to be copied into a new or existing protection group. If the destination protection group and all of its volumes already exist, include the `overwrite` parameter to overwrite all of the existing volumes with the snapshot contents. If including the `overwrite` parameter, the names of the volumes that are being overwritten must match the names of the volumes that are being restored. If the source is a protection group, the latest snapshot of the protection group will be used as the source during the copy operation.

	*/
	SourceNames []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) WithTimeout(timeout time.Duration) *PostAPI24ProtectionGroupsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) WithContext(ctx context.Context) *PostAPI24ProtectionGroupsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) WithHTTPClient(client *http.Client) *PostAPI24ProtectionGroupsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) WithAuthorization(authorization *string) *PostAPI24ProtectionGroupsParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithXRequestID adds the xRequestID to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) WithXRequestID(xRequestID *string) *PostAPI24ProtectionGroupsParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithNames adds the names to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) WithNames(names []string) *PostAPI24ProtectionGroupsParams {
	o.SetNames(names)
	return o
}

// SetNames adds the names to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) SetNames(names []string) {
	o.Names = names
}

// WithOverwrite adds the overwrite to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) WithOverwrite(overwrite *bool) *PostAPI24ProtectionGroupsParams {
	o.SetOverwrite(overwrite)
	return o
}

// SetOverwrite adds the overwrite to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) SetOverwrite(overwrite *bool) {
	o.Overwrite = overwrite
}

// WithSourceNames adds the sourceNames to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) WithSourceNames(sourceNames []string) *PostAPI24ProtectionGroupsParams {
	o.SetSourceNames(sourceNames)
	return o
}

// SetSourceNames adds the sourceNames to the post API 24 protection groups params
func (o *PostAPI24ProtectionGroupsParams) SetSourceNames(sourceNames []string) {
	o.SourceNames = sourceNames
}

// WriteToRequest writes these params to a swagger request
func (o *PostAPI24ProtectionGroupsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param Authorization
		if err := r.SetHeaderParam("Authorization", *o.Authorization); err != nil {
			return err
		}

	}

	if o.XRequestID != nil {

		// header param X-Request-ID
		if err := r.SetHeaderParam("X-Request-ID", *o.XRequestID); err != nil {
			return err
		}

	}

	valuesNames := o.Names

	joinedNames := swag.JoinByFormat(valuesNames, "csv")
	// query array param names
	if err := r.SetQueryParam("names", joinedNames...); err != nil {
		return err
	}

	if o.Overwrite != nil {

		// query param overwrite
		var qrOverwrite bool
		if o.Overwrite != nil {
			qrOverwrite = *o.Overwrite
		}
		qOverwrite := swag.FormatBool(qrOverwrite)
		if qOverwrite != "" {

			if err := r.SetQueryParam("overwrite", qOverwrite); err != nil {
				return err
			}
		}

	}

	valuesSourceNames := o.SourceNames

	joinedSourceNames := swag.JoinByFormat(valuesSourceNames, "csv")
	// query array param source_names
	if err := r.SetQueryParam("source_names", joinedSourceNames...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
