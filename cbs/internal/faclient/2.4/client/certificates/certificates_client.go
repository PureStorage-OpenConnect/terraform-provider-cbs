// Code generated by go-swagger; DO NOT EDIT.

package certificates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new certificates API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for certificates API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24Certificates(params *DeleteAPI24CertificatesParams) (*DeleteApi24CertificatesOK, error)

	GetAPI24Certificates(params *GetAPI24CertificatesParams) (*GetApi24CertificatesOK, error)

	PatchAPI24Certificates(params *PatchAPI24CertificatesParams) (*PatchApi24CertificatesOK, error)

	PostAPI24Certificates(params *PostAPI24CertificatesParams) (*PostApi24CertificatesOK, error)

	PostAPI24CertificatesCertificateSigningRequests(params *PostAPI24CertificatesCertificateSigningRequestsParams) (*PostApi24CertificatesCertificateSigningRequestsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24Certificates deletes certificate

  Deletes a specific certificate object.
*/
func (a *Client) DeleteAPI24Certificates(params *DeleteAPI24CertificatesParams) (*DeleteApi24CertificatesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24CertificatesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24Certificates",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/certificates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24CertificatesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24CertificatesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24Certificates: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24Certificates lists certificate attributes

  Displays certificate attributes.
*/
func (a *Client) GetAPI24Certificates(params *GetAPI24CertificatesParams) (*GetApi24CertificatesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24CertificatesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24Certificates",
		Method:             "GET",
		PathPattern:        "/api/2.4/certificates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24CertificatesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24CertificatesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24Certificates: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24Certificates modifies certificates

  Modifies certificate attributes. When you modify the attributes of a self-signed certificate, Purity//FA replaces the existing certificate with a new certificate, which is generated with the specified attributes.
*/
func (a *Client) PatchAPI24Certificates(params *PatchAPI24CertificatesParams) (*PatchApi24CertificatesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24CertificatesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24Certificates",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/certificates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24CertificatesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24CertificatesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24Certificates: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24Certificates creates certificate

  Creates a certificate object and specifies the valid time period and organization details of the certificate. A certificate can be imported or manually configured.
*/
func (a *Client) PostAPI24Certificates(params *PostAPI24CertificatesParams) (*PostApi24CertificatesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24CertificatesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24Certificates",
		Method:             "POST",
		PathPattern:        "/api/2.4/certificates",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24CertificatesReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24CertificatesOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24Certificates: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24CertificatesCertificateSigningRequests creates certificate signing request

  Creates a certificate signing request based on the certificate type and parameters.
*/
func (a *Client) PostAPI24CertificatesCertificateSigningRequests(params *PostAPI24CertificatesCertificateSigningRequestsParams) (*PostApi24CertificatesCertificateSigningRequestsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24CertificatesCertificateSigningRequestsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24CertificatesCertificateSigningRequests",
		Method:             "POST",
		PathPattern:        "/api/2.4/certificates/certificate-signing-requests",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24CertificatesCertificateSigningRequestsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24CertificatesCertificateSigningRequestsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24CertificatesCertificateSigningRequests: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
