// Code generated by go-swagger; DO NOT EDIT.

package connections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteAPI24ConnectionsParams creates a new DeleteAPI24ConnectionsParams object
// with the default values initialized.
func NewDeleteAPI24ConnectionsParams() *DeleteAPI24ConnectionsParams {
	var ()
	return &DeleteAPI24ConnectionsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteAPI24ConnectionsParamsWithTimeout creates a new DeleteAPI24ConnectionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteAPI24ConnectionsParamsWithTimeout(timeout time.Duration) *DeleteAPI24ConnectionsParams {
	var ()
	return &DeleteAPI24ConnectionsParams{

		timeout: timeout,
	}
}

// NewDeleteAPI24ConnectionsParamsWithContext creates a new DeleteAPI24ConnectionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteAPI24ConnectionsParamsWithContext(ctx context.Context) *DeleteAPI24ConnectionsParams {
	var ()
	return &DeleteAPI24ConnectionsParams{

		Context: ctx,
	}
}

// NewDeleteAPI24ConnectionsParamsWithHTTPClient creates a new DeleteAPI24ConnectionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteAPI24ConnectionsParamsWithHTTPClient(client *http.Client) *DeleteAPI24ConnectionsParams {
	var ()
	return &DeleteAPI24ConnectionsParams{
		HTTPClient: client,
	}
}

/*DeleteAPI24ConnectionsParams contains all the parameters to send to the API endpoint
for the delete API 24 connections operation typically these are written to a http.Request
*/
type DeleteAPI24ConnectionsParams struct {

	/*Authorization
	  Access token (in JWT format) required to use any API endpoint (except `/oauth2`, `/login`, and `/logout`)

	*/
	Authorization *string
	/*XRequestID
	  Supplied by client during request or generated by server.

	*/
	XRequestID *string
	/*HostGroupNames
	  Performs the operation on the host group specified. Enter multiple names in comma-separated format. A request cannot include a mix of multiple objects with multiple names. For example, a request cannot include a mix of multiple host group names and volume names; instead, at least one of the objects (e.g., `host_group_names`) must be set to only one name (e.g., `hgroup01`).

	*/
	HostGroupNames []string
	/*HostNames
	  Performs the operation on the hosts specified. Enter multiple names in comma-separated format. For example, `host01,host02`. A request cannot include a mix of multiple objects with multiple names. For example, a request cannot include a mix of multiple host names and volume names; instead, at least one of the objects (e.g., `host_names`) must be set to only one name (e.g., `host01`).

	*/
	HostNames []string
	/*VolumeNames
	  Performs the operation on the volume specified. Enter multiple names in comma-separated format. For example, `vol01,vol02`. A request cannot include a mix of multiple objects with multiple names. For example, a request cannot include a mix of multiple volume names and host names; instead, at least one of the objects (e.g., `volume_names`) must be set to only one name (e.g., `vol01`).

	*/
	VolumeNames []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) WithTimeout(timeout time.Duration) *DeleteAPI24ConnectionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) WithContext(ctx context.Context) *DeleteAPI24ConnectionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) WithHTTPClient(client *http.Client) *DeleteAPI24ConnectionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorization adds the authorization to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) WithAuthorization(authorization *string) *DeleteAPI24ConnectionsParams {
	o.SetAuthorization(authorization)
	return o
}

// SetAuthorization adds the authorization to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) SetAuthorization(authorization *string) {
	o.Authorization = authorization
}

// WithXRequestID adds the xRequestID to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) WithXRequestID(xRequestID *string) *DeleteAPI24ConnectionsParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithHostGroupNames adds the hostGroupNames to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) WithHostGroupNames(hostGroupNames []string) *DeleteAPI24ConnectionsParams {
	o.SetHostGroupNames(hostGroupNames)
	return o
}

// SetHostGroupNames adds the hostGroupNames to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) SetHostGroupNames(hostGroupNames []string) {
	o.HostGroupNames = hostGroupNames
}

// WithHostNames adds the hostNames to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) WithHostNames(hostNames []string) *DeleteAPI24ConnectionsParams {
	o.SetHostNames(hostNames)
	return o
}

// SetHostNames adds the hostNames to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) SetHostNames(hostNames []string) {
	o.HostNames = hostNames
}

// WithVolumeNames adds the volumeNames to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) WithVolumeNames(volumeNames []string) *DeleteAPI24ConnectionsParams {
	o.SetVolumeNames(volumeNames)
	return o
}

// SetVolumeNames adds the volumeNames to the delete API 24 connections params
func (o *DeleteAPI24ConnectionsParams) SetVolumeNames(volumeNames []string) {
	o.VolumeNames = volumeNames
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteAPI24ConnectionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Authorization != nil {

		// header param Authorization
		if err := r.SetHeaderParam("Authorization", *o.Authorization); err != nil {
			return err
		}

	}

	if o.XRequestID != nil {

		// header param X-Request-ID
		if err := r.SetHeaderParam("X-Request-ID", *o.XRequestID); err != nil {
			return err
		}

	}

	valuesHostGroupNames := o.HostGroupNames

	joinedHostGroupNames := swag.JoinByFormat(valuesHostGroupNames, "csv")
	// query array param host_group_names
	if err := r.SetQueryParam("host_group_names", joinedHostGroupNames...); err != nil {
		return err
	}

	valuesHostNames := o.HostNames

	joinedHostNames := swag.JoinByFormat(valuesHostNames, "csv")
	// query array param host_names
	if err := r.SetQueryParam("host_names", joinedHostNames...); err != nil {
		return err
	}

	valuesVolumeNames := o.VolumeNames

	joinedVolumeNames := swag.JoinByFormat(valuesVolumeNames, "csv")
	// query array param volume_names
	if err := r.SetQueryParam("volume_names", joinedVolumeNames...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
