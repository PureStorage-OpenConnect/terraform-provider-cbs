// Code generated by go-swagger; DO NOT EDIT.

package volume_snapshots

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new volume snapshots API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for volume snapshots API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24VolumeSnapshots(params *DeleteAPI24VolumeSnapshotsParams) (*DeleteApi24VolumeSnapshotsOK, error)

	DeleteAPI24VolumeSnapshotsTags(params *DeleteAPI24VolumeSnapshotsTagsParams) (*DeleteApi24VolumeSnapshotsTagsOK, error)

	GetAPI24VolumeSnapshots(params *GetAPI24VolumeSnapshotsParams) (*GetApi24VolumeSnapshotsOK, error)

	GetAPI24VolumeSnapshotsTags(params *GetAPI24VolumeSnapshotsTagsParams) (*GetApi24VolumeSnapshotsTagsOK, error)

	GetAPI24VolumeSnapshotsTransfer(params *GetAPI24VolumeSnapshotsTransferParams) (*GetApi24VolumeSnapshotsTransferOK, error)

	PatchAPI24VolumeSnapshots(params *PatchAPI24VolumeSnapshotsParams) (*PatchApi24VolumeSnapshotsOK, error)

	PostAPI24VolumeSnapshots(params *PostAPI24VolumeSnapshotsParams) (*PostApi24VolumeSnapshotsOK, error)

	PutAPI24VolumeSnapshotsTagsBatch(params *PutAPI24VolumeSnapshotsTagsBatchParams) (*PutApi24VolumeSnapshotsTagsBatchOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24VolumeSnapshots eradicates a volume snapshot

  Eradicate a volume snapshot that has been destroyed and is pending eradication. Eradicated volumes snapshots cannot be recovered. Volume snapshots are destroyed through the `PATCH` method. The `ids` or `names` parameter is required, but cannot be set together.
*/
func (a *Client) DeleteAPI24VolumeSnapshots(params *DeleteAPI24VolumeSnapshotsParams) (*DeleteApi24VolumeSnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24VolumeSnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24VolumeSnapshots",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/volume-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24VolumeSnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24VolumeSnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24VolumeSnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteAPI24VolumeSnapshotsTags deletes tags

  Deletes specified tags on volume snapshot objects.
*/
func (a *Client) DeleteAPI24VolumeSnapshotsTags(params *DeleteAPI24VolumeSnapshotsTagsParams) (*DeleteApi24VolumeSnapshotsTagsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24VolumeSnapshotsTagsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24VolumeSnapshotsTags",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/volume-snapshots/tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24VolumeSnapshotsTagsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24VolumeSnapshotsTagsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24VolumeSnapshotsTags: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24VolumeSnapshots lists volume snapshots

  Return a list of volume snapshots, including those pending eradication.
*/
func (a *Client) GetAPI24VolumeSnapshots(params *GetAPI24VolumeSnapshotsParams) (*GetApi24VolumeSnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24VolumeSnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24VolumeSnapshots",
		Method:             "GET",
		PathPattern:        "/api/2.4/volume-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24VolumeSnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24VolumeSnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24VolumeSnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24VolumeSnapshotsTags lists tags

  Displays the list of tags on volume snapshot objects.
*/
func (a *Client) GetAPI24VolumeSnapshotsTags(params *GetAPI24VolumeSnapshotsTagsParams) (*GetApi24VolumeSnapshotsTagsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24VolumeSnapshotsTagsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24VolumeSnapshotsTags",
		Method:             "GET",
		PathPattern:        "/api/2.4/volume-snapshots/tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24VolumeSnapshotsTagsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24VolumeSnapshotsTagsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24VolumeSnapshotsTags: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24VolumeSnapshotsTransfer lists volume snapshots with transfer statistics

  Returns a list of volume snapshots and their transfer statistics.
*/
func (a *Client) GetAPI24VolumeSnapshotsTransfer(params *GetAPI24VolumeSnapshotsTransferParams) (*GetApi24VolumeSnapshotsTransferOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24VolumeSnapshotsTransferParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24VolumeSnapshotsTransfer",
		Method:             "GET",
		PathPattern:        "/api/2.4/volume-snapshots/transfer",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24VolumeSnapshotsTransferReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24VolumeSnapshotsTransferOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24VolumeSnapshotsTransfer: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24VolumeSnapshots manages a volume snapshot

  Rename, destroy, or recover a volume snapshot. To rename the suffix of a volume snapshot, set `name` to the new suffix name. To recover a volume snapshot that has been destroyed and is pending eradication, set `destroyed=true`. The `ids` or `names` parameter is required, but cannot be set together.
*/
func (a *Client) PatchAPI24VolumeSnapshots(params *PatchAPI24VolumeSnapshotsParams) (*PatchApi24VolumeSnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24VolumeSnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24VolumeSnapshots",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/volume-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24VolumeSnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24VolumeSnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24VolumeSnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24VolumeSnapshots generates a volume snapshot

  Create a point-in-time snapshot of the contents of a volume. The `source_ids` or `source_names` parameter is required, but cannot be set together.
*/
func (a *Client) PostAPI24VolumeSnapshots(params *PostAPI24VolumeSnapshotsParams) (*PostApi24VolumeSnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24VolumeSnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24VolumeSnapshots",
		Method:             "POST",
		PathPattern:        "/api/2.4/volume-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24VolumeSnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24VolumeSnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24VolumeSnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PutAPI24VolumeSnapshotsTagsBatch updates tags

  Updates tags.
*/
func (a *Client) PutAPI24VolumeSnapshotsTagsBatch(params *PutAPI24VolumeSnapshotsTagsBatchParams) (*PutApi24VolumeSnapshotsTagsBatchOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPutAPI24VolumeSnapshotsTagsBatchParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PutAPI24VolumeSnapshotsTagsBatch",
		Method:             "PUT",
		PathPattern:        "/api/2.4/volume-snapshots/tags/batch",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PutAPI24VolumeSnapshotsTagsBatchReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PutApi24VolumeSnapshotsTagsBatchOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PutAPI24VolumeSnapshotsTagsBatch: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
