// Code generated by go-swagger; DO NOT EDIT.

package alert_watchers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new alert watchers API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for alert watchers API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24AlertWatchers(params *DeleteAPI24AlertWatchersParams) (*DeleteApi24AlertWatchersOK, error)

	GetAPI24AlertWatchers(params *GetAPI24AlertWatchersParams) (*GetApi24AlertWatchersOK, error)

	GetAPI24AlertWatchersTest(params *GetAPI24AlertWatchersTestParams) (*GetApi24AlertWatchersTestOK, error)

	PatchAPI24AlertWatchers(params *PatchAPI24AlertWatchersParams) (*PatchApi24AlertWatchersOK, error)

	PostAPI24AlertWatchers(params *PostAPI24AlertWatchersParams) (*PostApi24AlertWatchersOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24AlertWatchers deletes alert watcher

  Delete alert watcher email address from the list of alert watchers.
*/
func (a *Client) DeleteAPI24AlertWatchers(params *DeleteAPI24AlertWatchersParams) (*DeleteApi24AlertWatchersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24AlertWatchersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24AlertWatchers",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/alert-watchers",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24AlertWatchersReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24AlertWatchersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24AlertWatchers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24AlertWatchers lists alert watchers

  Displays alert watcher email addressess and indicates whether they are `enabled`.
*/
func (a *Client) GetAPI24AlertWatchers(params *GetAPI24AlertWatchersParams) (*GetApi24AlertWatchersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24AlertWatchersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24AlertWatchers",
		Method:             "GET",
		PathPattern:        "/api/2.4/alert-watchers",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24AlertWatchersReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24AlertWatchersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24AlertWatchers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24AlertWatchersTest lists alert watcher test

  Displays alert watcher email test results.
*/
func (a *Client) GetAPI24AlertWatchersTest(params *GetAPI24AlertWatchersTestParams) (*GetApi24AlertWatchersTestOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24AlertWatchersTestParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24AlertWatchersTest",
		Method:             "GET",
		PathPattern:        "/api/2.4/alert-watchers/test",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24AlertWatchersTestReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24AlertWatchersTestOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24AlertWatchersTest: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24AlertWatchers modifies alert watcher

  Modify alert watcher email address by enabling or disabling it.
*/
func (a *Client) PatchAPI24AlertWatchers(params *PatchAPI24AlertWatchersParams) (*PatchApi24AlertWatchersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24AlertWatchersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24AlertWatchers",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/alert-watchers",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24AlertWatchersReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24AlertWatchersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24AlertWatchers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24AlertWatchers creates alert watcher

  Creates one or more alert watcher email addresses, adding them to the list of alert watchers.
*/
func (a *Client) PostAPI24AlertWatchers(params *PostAPI24AlertWatchersParams) (*PostApi24AlertWatchersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24AlertWatchersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24AlertWatchers",
		Method:             "POST",
		PathPattern:        "/api/2.4/alert-watchers",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24AlertWatchersReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24AlertWatchersOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24AlertWatchers: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
