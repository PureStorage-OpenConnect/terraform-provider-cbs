// Code generated by go-swagger; DO NOT EDIT.

package remote_protection_group_snapshots

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new remote protection group snapshots API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for remote protection group snapshots API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	DeleteAPI24RemoteProtectionGroupSnapshots(params *DeleteAPI24RemoteProtectionGroupSnapshotsParams) (*DeleteApi24RemoteProtectionGroupSnapshotsOK, error)

	GetAPI24RemoteProtectionGroupSnapshots(params *GetAPI24RemoteProtectionGroupSnapshotsParams) (*GetApi24RemoteProtectionGroupSnapshotsOK, error)

	GetAPI24RemoteProtectionGroupSnapshotsTransfer(params *GetAPI24RemoteProtectionGroupSnapshotsTransferParams) (*GetApi24RemoteProtectionGroupSnapshotsTransferOK, error)

	PatchAPI24RemoteProtectionGroupSnapshots(params *PatchAPI24RemoteProtectionGroupSnapshotsParams) (*PatchApi24RemoteProtectionGroupSnapshotsOK, error)

	PostAPI24RemoteProtectionGroupSnapshots(params *PostAPI24RemoteProtectionGroupSnapshotsParams) (*PostApi24RemoteProtectionGroupSnapshotsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  DeleteAPI24RemoteProtectionGroupSnapshots deletes a remote protection group snapshot

  Deletes a remote protection group snapshot that has been destroyed and is pending eradication. Eradicated remote protection group snapshots cannot be recovered. Remote protection group snapshots are destroyed using the `PATCH` method. The `names` parameter represents the name of the protection group snapshot. The `on` parameter represents the name of the offload target. The `names` and `on` parameters are required and must be used together.
*/
func (a *Client) DeleteAPI24RemoteProtectionGroupSnapshots(params *DeleteAPI24RemoteProtectionGroupSnapshotsParams) (*DeleteApi24RemoteProtectionGroupSnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteAPI24RemoteProtectionGroupSnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "DeleteAPI24RemoteProtectionGroupSnapshots",
		Method:             "DELETE",
		PathPattern:        "/api/2.4/remote-protection-group-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteAPI24RemoteProtectionGroupSnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteApi24RemoteProtectionGroupSnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteAPI24RemoteProtectionGroupSnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24RemoteProtectionGroupSnapshots lists remote protection group snapshots

  Displays a list of remote protection group snapshots.
*/
func (a *Client) GetAPI24RemoteProtectionGroupSnapshots(params *GetAPI24RemoteProtectionGroupSnapshotsParams) (*GetApi24RemoteProtectionGroupSnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24RemoteProtectionGroupSnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24RemoteProtectionGroupSnapshots",
		Method:             "GET",
		PathPattern:        "/api/2.4/remote-protection-group-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24RemoteProtectionGroupSnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24RemoteProtectionGroupSnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24RemoteProtectionGroupSnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetAPI24RemoteProtectionGroupSnapshotsTransfer lists remote protection groups with transfer statistics

  Returns a list of remote protection groups and their transfer statistics.
*/
func (a *Client) GetAPI24RemoteProtectionGroupSnapshotsTransfer(params *GetAPI24RemoteProtectionGroupSnapshotsTransferParams) (*GetApi24RemoteProtectionGroupSnapshotsTransferOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAPI24RemoteProtectionGroupSnapshotsTransferParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetAPI24RemoteProtectionGroupSnapshotsTransfer",
		Method:             "GET",
		PathPattern:        "/api/2.4/remote-protection-group-snapshots/transfer",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetAPI24RemoteProtectionGroupSnapshotsTransferReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetApi24RemoteProtectionGroupSnapshotsTransferOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetAPI24RemoteProtectionGroupSnapshotsTransfer: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PatchAPI24RemoteProtectionGroupSnapshots modifies a remote protection group snapshot

  Modifies a remote protection group snapshot, removing it from the offload target and destroying the snapshot. The `on` parameter represents the name of the offload target. The `ids` or `names` parameter and the `on` parameter are required and must be used together.
*/
func (a *Client) PatchAPI24RemoteProtectionGroupSnapshots(params *PatchAPI24RemoteProtectionGroupSnapshotsParams) (*PatchApi24RemoteProtectionGroupSnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPatchAPI24RemoteProtectionGroupSnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PatchAPI24RemoteProtectionGroupSnapshots",
		Method:             "PATCH",
		PathPattern:        "/api/2.4/remote-protection-group-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PatchAPI24RemoteProtectionGroupSnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PatchApi24RemoteProtectionGroupSnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PatchAPI24RemoteProtectionGroupSnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostAPI24RemoteProtectionGroupSnapshots creates remote protection group snapshot

  Creates remote protection group snapshots.
*/
func (a *Client) PostAPI24RemoteProtectionGroupSnapshots(params *PostAPI24RemoteProtectionGroupSnapshotsParams) (*PostApi24RemoteProtectionGroupSnapshotsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostAPI24RemoteProtectionGroupSnapshotsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostAPI24RemoteProtectionGroupSnapshots",
		Method:             "POST",
		PathPattern:        "/api/2.4/remote-protection-group-snapshots",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &PostAPI24RemoteProtectionGroupSnapshotsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostApi24RemoteProtectionGroupSnapshotsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostAPI24RemoteProtectionGroupSnapshots: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
