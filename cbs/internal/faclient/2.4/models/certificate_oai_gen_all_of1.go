// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CertificateOAIGenAllOf1 SSL certificate managed by Purity.
//
// swagger:model certificateOaiGenAllOf1
type CertificateOAIGenAllOf1 struct {

	// The text of the certificate.
	Certificate string `json:"certificate,omitempty"`

	// The common name field listed in the certificate.
	CommonName string `json:"common_name,omitempty"`

	// Two-letter country (ISO) code listed in the certificate.
	Country string `json:"country,omitempty"`

	// The email field listed in the certificate.
	Email string `json:"email,omitempty"`

	// The text of the intermediate certificate chains.
	IntermediateCertificate string `json:"intermediate_certificate,omitempty"`

	// The party that issued the certificate.
	// Read Only: true
	IssuedBy string `json:"issued_by,omitempty"`

	// The party to whom the certificate is issued.
	// Read Only: true
	IssuedTo string `json:"issued_to,omitempty"`

	// The size of the private key for the certificate in bits. Default is 2048 bits.
	KeySize int32 `json:"key_size,omitempty"`

	// The locality field listed in the certificate.
	Locality string `json:"locality,omitempty"`

	// The organization field listed in the certificate.
	Organization string `json:"organization,omitempty"`

	// The organizational unit field listed in the certificate.
	OrganizationalUnit string `json:"organizational_unit,omitempty"`

	// The state/province field listed in the certificate.
	State string `json:"state,omitempty"`

	// The type of certificate. Valid values are `self-signed` and `imported`.
	// Read Only: true
	Status string `json:"status,omitempty"`

	// The date when the certificate starts being valid.
	// Read Only: true
	ValidFrom int64 `json:"valid_from,omitempty"`

	// The date of when the certificate stops being valid.
	// Read Only: true
	ValidTo int64 `json:"valid_to,omitempty"`
}

// Validate validates this certificate Oai gen all of1
func (m *CertificateOAIGenAllOf1) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CertificateOAIGenAllOf1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CertificateOAIGenAllOf1) UnmarshalBinary(b []byte) error {
	var res CertificateOAIGenAllOf1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
