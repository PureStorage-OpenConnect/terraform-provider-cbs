// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// HostPerformanceBalanceOAIGenAllOf1 host performance balance Oai gen all of1
//
// swagger:model hostPerformanceBalanceOaiGenAllOf1
type HostPerformanceBalanceOAIGenAllOf1 struct {

	// The path with the highest number of op counts is displayed with a fraction_relative_to_max of 1.0. The fraction values of all other paths in the host are then calculated relative to the path with the highest number of op counts.
	FractionRelativeToMax float32 `json:"fraction_relative_to_max,omitempty"`

	// initiator
	Initiator *PortCommon `json:"initiator,omitempty"`

	// Count of I/O operations for the host path, over the specified resolution.
	OpCount int64 `json:"op_count,omitempty"`

	// target
	Target *HostPerformanceBalanceOAIGenAllOf1Target `json:"target,omitempty"`

	// Sample time in milliseconds since UNIX epoch.
	Time int64 `json:"time,omitempty"`
}

// Validate validates this host performance balance Oai gen all of1
func (m *HostPerformanceBalanceOAIGenAllOf1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInitiator(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *HostPerformanceBalanceOAIGenAllOf1) validateInitiator(formats strfmt.Registry) error {

	if swag.IsZero(m.Initiator) { // not required
		return nil
	}

	if m.Initiator != nil {
		if err := m.Initiator.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("initiator")
			}
			return err
		}
	}

	return nil
}

func (m *HostPerformanceBalanceOAIGenAllOf1) validateTarget(formats strfmt.Registry) error {

	if swag.IsZero(m.Target) { // not required
		return nil
	}

	if m.Target != nil {
		if err := m.Target.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("target")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *HostPerformanceBalanceOAIGenAllOf1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *HostPerformanceBalanceOAIGenAllOf1) UnmarshalBinary(b []byte) error {
	var res HostPerformanceBalanceOAIGenAllOf1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
