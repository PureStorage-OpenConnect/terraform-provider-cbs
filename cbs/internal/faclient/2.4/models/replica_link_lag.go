// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReplicaLinkLag replica link lag
//
// swagger:model replicaLinkLag
type ReplicaLinkLag struct {

	// The average time difference between the current time and `recovery_point` for a period of time.
	// Minimum: 0
	Avg *int64 `json:"avg,omitempty"`

	// The maximum time difference between the current time and `recovery_point` for a period of time.
	// Minimum: 0
	Max *int64 `json:"max,omitempty"`
}

// Validate validates this replica link lag
func (m *ReplicaLinkLag) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAvg(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMax(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ReplicaLinkLag) validateAvg(formats strfmt.Registry) error {

	if swag.IsZero(m.Avg) { // not required
		return nil
	}

	if err := validate.MinimumInt("avg", "body", int64(*m.Avg), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *ReplicaLinkLag) validateMax(formats strfmt.Registry) error {

	if swag.IsZero(m.Max) { // not required
		return nil
	}

	if err := validate.MinimumInt("max", "body", int64(*m.Max), 0, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ReplicaLinkLag) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReplicaLinkLag) UnmarshalBinary(b []byte) error {
	var res ReplicaLinkLag
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
