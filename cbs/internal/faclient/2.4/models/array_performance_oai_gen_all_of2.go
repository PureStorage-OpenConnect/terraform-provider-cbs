// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ArrayPerformanceOAIGenAllOf2 array performance Oai gen all of2
//
// swagger:model arrayPerformanceOaiGenAllOf2
type ArrayPerformanceOAIGenAllOf2 struct {

	// Average local queue time for both read and write operations, measured in microseconds.
	// Minimum: 0
	LocalQueueUsecPerOp *int64 `json:"local_queue_usec_per_op,omitempty"`

	// The number of other requests processed per second.
	// Minimum: 0
	OthersPerSec *int64 `json:"others_per_sec,omitempty"`

	// Deprecated. The number displayed here may not be accurate and in later versions of the product this field will always display `null`. Instead, use `queue_usec_per_mirrored_write_op`, `queue_usec_per_read_op`, and `queue_usec_per_write_op` fields to measure IO queuing.
	// Minimum: 0
	QueueDepth *int64 `json:"queue_depth,omitempty"`

	// The average time it takes the array to process an I/O other request, measured in microseconds. The average time does not include SAN time, queue time, or QoS rate limit time.
	// Minimum: 0
	UsecPerOtherOp *int64 `json:"usec_per_other_op,omitempty"`
}

// Validate validates this array performance Oai gen all of2
func (m *ArrayPerformanceOAIGenAllOf2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLocalQueueUsecPerOp(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOthersPerSec(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQueueDepth(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsecPerOtherOp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ArrayPerformanceOAIGenAllOf2) validateLocalQueueUsecPerOp(formats strfmt.Registry) error {

	if swag.IsZero(m.LocalQueueUsecPerOp) { // not required
		return nil
	}

	if err := validate.MinimumInt("local_queue_usec_per_op", "body", int64(*m.LocalQueueUsecPerOp), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *ArrayPerformanceOAIGenAllOf2) validateOthersPerSec(formats strfmt.Registry) error {

	if swag.IsZero(m.OthersPerSec) { // not required
		return nil
	}

	if err := validate.MinimumInt("others_per_sec", "body", int64(*m.OthersPerSec), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *ArrayPerformanceOAIGenAllOf2) validateQueueDepth(formats strfmt.Registry) error {

	if swag.IsZero(m.QueueDepth) { // not required
		return nil
	}

	if err := validate.MinimumInt("queue_depth", "body", int64(*m.QueueDepth), 0, false); err != nil {
		return err
	}

	return nil
}

func (m *ArrayPerformanceOAIGenAllOf2) validateUsecPerOtherOp(formats strfmt.Registry) error {

	if swag.IsZero(m.UsecPerOtherOp) { // not required
		return nil
	}

	if err := validate.MinimumInt("usec_per_other_op", "body", int64(*m.UsecPerOtherOp), 0, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ArrayPerformanceOAIGenAllOf2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ArrayPerformanceOAIGenAllOf2) UnmarshalBinary(b []byte) error {
	var res ArrayPerformanceOAIGenAllOf2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
