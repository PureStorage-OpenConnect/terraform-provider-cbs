// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// VolumeGroupOAIGenAllOf1 Volume groups organize FlashArray volumes into logical groupings.
//
// swagger:model volumeGroupOaiGenAllOf1
type VolumeGroupOAIGenAllOf1 struct {

	// Returns a value of `true` if the volume group has been destroyed and is pending eradication. The `time_remaining` value displays the amount of time left until the destroyed volume group is permanently eradicated. Before the `time_remaining` period has elapsed, the destroyed volume group can be recovered by setting `destroyed=false`. Once the `time_remaining` period has elapsed, the volume group is permanently eradicated and can no longer be recovered.
	Destroyed bool `json:"destroyed,omitempty"`

	// qos
	Qos *Qos `json:"qos,omitempty"`

	// space
	Space *ArraySpaceOAIGenAllOf1SpaceAllOf0 `json:"space,omitempty"`

	// The amount of time left until the destroyed volume group is permanently eradicated. Measured in milliseconds. Before the `time_remaining` period has elapsed, the destroyed volume group can be recovered by setting `destroyed=false`.
	// Read Only: true
	TimeRemaining int64 `json:"time_remaining,omitempty"`

	// The number of volumes in the volume group.
	// Read Only: true
	VolumeCount int64 `json:"volume_count,omitempty"`
}

// Validate validates this volume group Oai gen all of1
func (m *VolumeGroupOAIGenAllOf1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateQos(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSpace(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VolumeGroupOAIGenAllOf1) validateQos(formats strfmt.Registry) error {

	if swag.IsZero(m.Qos) { // not required
		return nil
	}

	if m.Qos != nil {
		if err := m.Qos.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("qos")
			}
			return err
		}
	}

	return nil
}

func (m *VolumeGroupOAIGenAllOf1) validateSpace(formats strfmt.Registry) error {

	if swag.IsZero(m.Space) { // not required
		return nil
	}

	if m.Space != nil {
		if err := m.Space.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("space")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *VolumeGroupOAIGenAllOf1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VolumeGroupOAIGenAllOf1) UnmarshalBinary(b []byte) error {
	var res VolumeGroupOAIGenAllOf1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
